{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/EditColumn/EditColumn.jsx\",\n  _s = $RefreshSig$();\nimport ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport { Input, Error, Form } from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from 'redux/cards/cardsReducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditColumn = _ref => {\n  _s();\n  let {\n    text,\n    columnId\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      touched = {}\n    },\n    reset\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: '',\n      columnId: ''\n    },\n    resolver: yupResolver(editColumnSchema)\n  });\n  const onSubmit = () => {\n    dispatch(editColumn(text, columnId));\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      id: \"text\",\n      placeholder: \"Title\",\n      ...register('text'),\n      error: touched.text && errors.text && errors.text.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), errors.text && /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.text.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPlus, {\n      type: \"submit\",\n      approve: \"true\",\n      text: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(EditColumn, \"Gy0Yg2QhYd3v1ogi+fNavHJWLN0=\", false, function () {\n  return [useDispatch, useForm];\n});\n_c = EditColumn;\nexport default EditColumn;\nvar _c;\n$RefreshReg$(_c, \"EditColumn\");","map":{"version":3,"names":["ButtonPlus","editColumnSchema","Input","Error","Form","useForm","yupResolver","useDispatch","editColumn","jsxDEV","_jsxDEV","EditColumn","_ref","_s","text","columnId","dispatch","register","handleSubmit","formState","errors","touched","reset","mode","defaultValues","resolver","onSubmit","children","type","id","placeholder","error","message","fileName","_jsxFileName","lineNumber","columnNumber","approve","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/EditColumn/EditColumn.jsx"],"sourcesContent":["import ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport {\n  Input,\n  Error,\n  Form,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from 'redux/cards/cardsReducers';\n\nconst EditColumn = ({ text, columnId }) => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: '',\n      columnId: '',\n    },\n    resolver: yupResolver(editColumnSchema),\n  });\n\n  const onSubmit = () => {\n    dispatch(editColumn(text, columnId));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"text\"\n        id=\"text\"\n        placeholder=\"Title\"\n        {...register('text')}\n        error={touched.text && errors.text && errors.text.message}\n      />\n      {errors.text && <Error>{errors.text.message}</Error>}\n\n      <ButtonPlus type=\"submit\" approve=\"true\" text=\"Add\" />\n    </Form>\n  );\n};\n\nexport default EditColumn;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,kCAAkC;AACzD,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SACEC,KAAK,EACLC,KAAK,EACLC,IAAI,QACC,sDAAsD;AAC7D,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,UAAU,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAAH,IAAA;EACpC,MAAMI,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAM;IACJU,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC,MAAM;MAAEC,OAAO,GAAG,CAAC;IAAE,CAAC;IACnCC;EACF,CAAC,GAAGjB,OAAO,CAAC;IACVkB,IAAI,EAAE,QAAQ;IACdC,aAAa,EAAE;MACbV,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE;IACZ,CAAC;IACDU,QAAQ,EAAEnB,WAAW,CAACL,gBAAgB;EACxC,CAAC,CAAC;EAEF,MAAMyB,QAAQ,GAAGA,CAAA,KAAM;IACrBV,QAAQ,CAACR,UAAU,CAACM,IAAI,EAAEC,QAAQ,CAAC,CAAC;IACpCO,KAAK,CAAC,CAAC;EACT,CAAC;EAED,oBACEZ,OAAA,CAACN,IAAI;IAACsB,QAAQ,EAAER,YAAY,CAACQ,QAAQ,CAAE;IAAAC,QAAA,gBACrCjB,OAAA,CAACR,KAAK;MACJ0B,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,MAAM;MACTC,WAAW,EAAC,OAAO;MAAA,GACfb,QAAQ,CAAC,MAAM,CAAC;MACpBc,KAAK,EAAEV,OAAO,CAACP,IAAI,IAAIM,MAAM,CAACN,IAAI,IAAIM,MAAM,CAACN,IAAI,CAACkB;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,EACDhB,MAAM,CAACN,IAAI,iBAAIJ,OAAA,CAACP,KAAK;MAAAwB,QAAA,EAAEP,MAAM,CAACN,IAAI,CAACkB;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpD1B,OAAA,CAACV,UAAU;MAAC4B,IAAI,EAAC,QAAQ;MAACS,OAAO,EAAC,MAAM;MAACvB,IAAI,EAAC;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEX,CAAC;AAACvB,EAAA,CApCIF,UAAU;EAAA,QACGJ,WAAW,EAOxBF,OAAO;AAAA;AAAAiC,EAAA,GARP3B,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}