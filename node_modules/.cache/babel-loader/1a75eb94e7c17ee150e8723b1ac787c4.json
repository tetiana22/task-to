{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Header/Header.jsx\",\n  _s = $RefreshSig$();\nimport Burger from 'assets/fonts/images/icons/Burger';\nimport EditProfileModal from 'components/Modals/EditProfileModal/EditProfileModal';\nimport { HeaderSection, BurgerBtn, HeaderUserWrap, UserText, UserButton, UserImage } from './Header.styled';\nimport { selectUserData } from '../../redux/selectors';\nimport React, { useState } from 'react';\nimport avatarLight from '../../assets/fonts/images/userLogo/userLight.jpg';\nimport avatarDark from '../../assets/fonts/images/userLogo/userDark.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  _s();\n  let {\n    openMenu\n  } = _ref;\n  const user = useSelector(selectUserData);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const theme = user.theme;\n  const currentUserData = {\n    avatar: user.avatar,\n    login: user.name,\n    email: user.email\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(HeaderSection, {\n    children: [/*#__PURE__*/_jsxDEV(BurgerBtn, {\n      type: \"button\",\n      onClick: openMenu,\n      children: /*#__PURE__*/_jsxDEV(Burger, {\n        width: 24,\n        height: 24,\n        fillColor: '#161616'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserText, {\n      variant: \"body2\",\n      sx: {\n        color: 'text.primary'\n      },\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserButton, {\n      onClick: openModal,\n      \"aria-label\": \"open drawer\",\n      children: theme === 'dark' ? /*#__PURE__*/_jsxDEV(UserImage, {\n        src: currentUserData.avatar || avatarDark,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(UserImage, {\n        src: currentUserData.avatar || avatarLight,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeaderUserWrap, {\n      children: isModalOpen && /*#__PURE__*/_jsxDEV(EditProfileModal, {\n        onClose: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"TankZi+INSTN3tXLPhnvS0W07Qo=\", true);\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Burger","EditProfileModal","HeaderSection","BurgerBtn","HeaderUserWrap","UserText","UserButton","UserImage","selectUserData","React","useState","avatarLight","avatarDark","jsxDEV","_jsxDEV","Header","_ref","_s","openMenu","user","useSelector","isModalOpen","setIsModalOpen","theme","currentUserData","avatar","login","name","email","openModal","closeModal","children","type","onClick","width","height","fillColor","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","color","src","alt","onClose","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Header/Header.jsx"],"sourcesContent":["import Burger from 'assets/fonts/images/icons/Burger';\nimport EditProfileModal from 'components/Modals/EditProfileModal/EditProfileModal';\nimport {\n  HeaderSection,\n  BurgerBtn,\n  HeaderUserWrap,\n  UserText,\n  UserButton,\n  UserImage,\n} from './Header.styled';\nimport { selectUserData } from '../../redux/selectors';\nimport React, { useState } from 'react';\nimport avatarLight from '../../assets/fonts/images/userLogo/userLight.jpg';\nimport avatarDark from '../../assets/fonts/images/userLogo/userDark.jpg';\n\nconst Header = ({ openMenu }) => {\n  const user = useSelector(selectUserData);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const theme = user.theme;\n\n  const currentUserData = {\n    avatar: user.avatar,\n    login: user.name,\n    email: user.email,\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <HeaderSection>\n      <BurgerBtn type=\"button\" onClick={openMenu}>\n        <Burger width={24} height={24} fillColor={'#161616'} />\n      </BurgerBtn>\n      <UserText\n        variant=\"body2\"\n        sx={{\n          color: 'text.primary',\n        }}\n      >\n        {user.name}\n      </UserText>\n      <UserButton onClick={openModal} aria-label=\"open drawer\">\n        {theme === 'dark' ? (\n          <UserImage src={currentUserData.avatar || avatarDark} alt=\"Avatar\" />\n        ) : (\n          <UserImage src={currentUserData.avatar || avatarLight} alt=\"Avatar\" />\n        )}\n      </UserButton>\n      <HeaderUserWrap>\n        {/* Render the modal only when isModalOpen is true */}\n        {isModalOpen && <EditProfileModal onClose={closeModal} />}\n      </HeaderUserWrap>\n    </HeaderSection>\n  );\n};\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}