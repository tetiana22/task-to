{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Home/Home.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import { Outlet, useLocation } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\nimport { useTheme } from '@mui/material';\nimport Header from '../Header/Header';\n// import ScreensPage from '../../components/ScreensPage/ScreensPage';\n\nimport { HomePageContainer, MainContainer } from './Home.styled';\nimport { ThemeProvider } from 'styled-components';\nimport { selectTheme } from '../../redux/selectors';\nimport Board from 'pages/ScreensPage/Board/Board';\n// import { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n// import {\n//   getDashboardById,\n//   getAllDashboards,\n// } from '../../redux/cards/cardsReducers';\n// import { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const theme = useTheme();\n  const activeUserTheme = useSelector(selectTheme);\n  //   const dispatch = useDispatch();\n  //   const navigate = useNavigate();\n\n  const selectThemeIndex = () => {\n    if (activeUserTheme === 'dark') {\n      return 0;\n    } else if (activeUserTheme === 'light') {\n      return 1;\n    } else if (activeUserTheme === 'violet') {\n      return 2;\n    }\n  };\n  //   useEffect(() => {\n  //     dispatch(getAllDashboards()).then(data => {\n  //       if (data.payload.length === 0) {\n  //         return;\n  //       }\n\n  //       dispatch(getDashboardById(data.payload[0]._id));\n  //       navigate(`/home/${data.payload[0].name}`);\n  //     });\n  //   }, [dispatch]);\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(HomePageContainer, {\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"f/PkV6Wnfbk9V0TphQ1b1+rVg+A=\", false, function () {\n  return [useTheme, useSelector];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useTheme","Header","HomePageContainer","MainContainer","ThemeProvider","selectTheme","Board","useSelector","jsxDEV","_jsxDEV","HomePage","_s","theme","activeUserTheme","selectThemeIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Home/Home.jsx"],"sourcesContent":["// import { useState } from 'react';\n// import { Outlet, useLocation } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\nimport { useTheme } from '@mui/material';\nimport Header from '../Header/Header';\n// import ScreensPage from '../../components/ScreensPage/ScreensPage';\n\nimport { HomePageContainer, MainContainer } from './Home.styled';\nimport { ThemeProvider } from 'styled-components';\nimport { selectTheme } from '../../redux/selectors';\n\nimport Board from 'pages/ScreensPage/Board/Board';\n// import { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n// import {\n//   getDashboardById,\n//   getAllDashboards,\n// } from '../../redux/cards/cardsReducers';\n// import { useEffect } from 'react';\n\nconst HomePage = () => {\n  const theme = useTheme();\n\n  const activeUserTheme = useSelector(selectTheme);\n  //   const dispatch = useDispatch();\n  //   const navigate = useNavigate();\n\n  const selectThemeIndex = () => {\n    if (activeUserTheme === 'dark') {\n      return 0;\n    } else if (activeUserTheme === 'light') {\n      return 1;\n    } else if (activeUserTheme === 'violet') {\n      return 2;\n    }\n  };\n  //   useEffect(() => {\n  //     dispatch(getAllDashboards()).then(data => {\n  //       if (data.payload.length === 0) {\n  //         return;\n  //       }\n\n  //       dispatch(getDashboardById(data.payload[0]._id));\n  //       navigate(`/home/${data.payload[0].name}`);\n  //     });\n  //   }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <HomePageContainer>\n        <MainContainer>\n          <Header /> <Board />\n        </MainContainer>\n      </HomePageContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,eAAe;AACxC,OAAOC,MAAM,MAAM,kBAAkB;AACrC;;AAEA,SAASC,iBAAiB,EAAEC,aAAa,QAAQ,eAAe;AAChE,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,WAAW,QAAQ,uBAAuB;AAEnD,OAAOC,KAAK,MAAM,+BAA+B;AACjD;AACA,SAASC,WAAW,QAAQ,aAAa;AACzC;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,KAAK,GAAGZ,QAAQ,CAAC,CAAC;EAExB,MAAMa,eAAe,GAAGN,WAAW,CAACF,WAAW,CAAC;EAChD;EACA;;EAEA,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAID,eAAe,KAAK,MAAM,EAAE;MAC9B,OAAO,CAAC;IACV,CAAC,MAAM,IAAIA,eAAe,KAAK,OAAO,EAAE;MACtC,OAAO,CAAC;IACV,CAAC,MAAM,IAAIA,eAAe,KAAK,QAAQ,EAAE;MACvC,OAAO,CAAC;IACV;EACF,CAAC;EACD;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACEJ,OAAA,CAACL,aAAa;IAACQ,KAAK,EAAEA,KAAM;IAAAG,QAAA,eAC1BN,OAAA,CAACP,iBAAiB;MAAAa,QAAA,eAChBN,OAAA,CAACN,aAAa;QAAAY,QAAA,gBACZN,OAAA,CAACR,MAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,eAAAV,OAAA,CAACH,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEpB,CAAC;AAACR,EAAA,CApCID,QAAQ;EAAA,QACEV,QAAQ,EAEEO,WAAW;AAAA;AAAAa,EAAA,GAH/BV,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}