{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Boards/ColumnTask/ColumnTask.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport { deleteColumn } from 'redux/dashboards/dashboardsOperations';\nimport Card from 'components/Cards/Card';\nimport EditColumnModal from 'components/Modals/ColumnModal/EditColumnModal/EditColumnModal';\nimport { Wrapper, Header, ButtonPlus, TaskList, IconWrapper, Icon, Content, Title, ContentWrapper } from './ColumnTask.styled';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColumnTask = _ref => {\n  _s();\n  let {\n    item\n  } = _ref;\n  const dispatch = useDispatch();\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const selectedPriority = useSelector(state => state.dashboards.selectedPriority);\n  const handleOpenColumnModal = () => setOpenColumnModal(true);\n  const handleCloseColumnModal = () => setOpenColumnModal(false);\n  const handleOpenCardModal = () => setOpenCardModal(true);\n  const handleCloseCardModal = () => setOpenCardModal(false);\n  const filteredColumn = item.cards && item.cards.filter(item => item.priority === selectedPriority);\n  const columnLength = item.cards && item.cards.length;\n  const fileteredColumnLength = filteredColumn && filteredColumn.length;\n  const condition = selectedPriority === 'show all' ? columnLength : fileteredColumnLength;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              onClick: handleOpenColumnModal,\n              children: /*#__PURE__*/_jsxDEV(\"use\", {\n                href: sprite + '#icon-pencil'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Icon, {\n              onClick: () => dispatch(deleteColumn(item._id)),\n              children: /*#__PURE__*/_jsxDEV(\"use\", {\n                href: sprite + '#icon-trash'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          length: condition,\n          children: selectedPriority === 'show all' ? item.cards && item.cards.map(el => /*#__PURE__*/_jsxDEV(Card, {\n            item: el,\n            columnName: item.title\n          }, el._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)) : filteredColumn && filteredColumn.map(el => /*#__PURE__*/_jsxDEV(Card, {\n            item: el,\n            columnName: item.title\n          }, el._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonPlus, {\n        onClick: handleOpenCardModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditColumnModal, {\n      title: item.title,\n      columnId: item._id,\n      closeModal: handleCloseColumnModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ColumnTask, \"xc55SWws5/wJygTiZbRcZ8ZS/zc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ColumnTask;\nvar _c;\n$RefreshReg$(_c, \"ColumnTask\");","map":{"version":3,"names":["useDispatch","useState","sprite","deleteColumn","Card","EditColumnModal","Wrapper","Header","ButtonPlus","TaskList","IconWrapper","Icon","Content","Title","ContentWrapper","useSelector","jsxDEV","_jsxDEV","ColumnTask","_ref","_s","item","dispatch","openColumnModal","setOpenColumnModal","openCardModal","setOpenCardModal","selectedPriority","state","dashboards","handleOpenColumnModal","handleCloseColumnModal","handleOpenCardModal","handleCloseCardModal","filteredColumn","cards","filter","priority","columnLength","length","fileteredColumnLength","condition","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","_id","map","el","columnName","columnId","closeModal","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Boards/ColumnTask/ColumnTask.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport { deleteColumn } from 'redux/dashboards/dashboardsOperations';\nimport Card from 'components/Cards/Card';\nimport EditColumnModal from 'components/Modals/ColumnModal/EditColumnModal/EditColumnModal';\n\nimport {\n  Wrapper,\n  Header,\n  ButtonPlus,\n  TaskList,\n  IconWrapper,\n  Icon,\n  Content,\n  Title,\n  ContentWrapper,\n} from './ColumnTask.styled';\n\nimport { useSelector } from 'react-redux';\n\nexport const ColumnTask = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const selectedPriority = useSelector(\n    state => state.dashboards.selectedPriority\n  );\n\n  const handleOpenColumnModal = () => setOpenColumnModal(true);\n  const handleCloseColumnModal = () => setOpenColumnModal(false);\n\n  const handleOpenCardModal = () => setOpenCardModal(true);\n  const handleCloseCardModal = () => setOpenCardModal(false);\n\n  const filteredColumn =\n    item.cards && item.cards.filter(item => item.priority === selectedPriority);\n\n  const columnLength = item.cards && item.cards.length;\n  const fileteredColumnLength = filteredColumn && filteredColumn.length;\n\n  const condition =\n    selectedPriority === 'show all' ? columnLength : fileteredColumnLength;\n\n  return (\n    <Wrapper>\n      <ContentWrapper>\n        <Content>\n          <Header>\n            <Title>{item.title}</Title>\n\n            <IconWrapper>\n              <Icon onClick={handleOpenColumnModal}>\n                <use href={sprite + '#icon-pencil'} />\n              </Icon>\n\n              <Icon onClick={() => dispatch(deleteColumn(item._id))}>\n                <use href={sprite + '#icon-trash'} />\n              </Icon>\n            </IconWrapper>\n          </Header>\n\n          <TaskList length={condition}>\n            {selectedPriority === 'show all'\n              ? item.cards &&\n                item.cards.map(el => (\n                  <Card key={el._id} item={el} columnName={item.title} />\n                ))\n              : filteredColumn &&\n                filteredColumn.map(el => (\n                  <Card key={el._id} item={el} columnName={item.title} />\n                ))}\n          </TaskList>\n        </Content>\n\n        <ButtonPlus onClick={handleOpenCardModal} />\n      </ContentWrapper>\n\n      <EditColumnModal\n        title={item.title}\n        columnId={item._id}\n        closeModal={handleCloseColumnModal}\n      />\n\n      {/* <AddCardModal columnId={item._id} closeModal={handleCloseCardModal} /> */}\n    </Wrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}