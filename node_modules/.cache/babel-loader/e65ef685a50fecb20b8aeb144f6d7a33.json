{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Home/Home.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import { Outlet, useLocation } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\nimport { useTheme } from '@mui/material';\nimport Header from '../Header/Header';\n// import ScreensPage from '../../components/ScreensPage/ScreensPage';\n\nimport { HomePageContainer, MainContainer } from './Home.styled';\nimport { ThemeProvider } from 'styled-components';\nimport { selectTheme } from 'redux/selectors';\nimport Board from 'pages/ScreensPage/Board/Board';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n// import { MainWrapper } from '../../components/ScreensPage/ScreensPage.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const theme = useTheme();\n  const {\n    boardName\n  } = useParams();\n  const activeUserTheme = useSelector(selectTheme);\n  const selectThemeIndex = () => {\n    if (activeUserTheme === 'dark') {\n      return 0;\n    } else if (activeUserTheme === 'light') {\n      return 1;\n    } else if (activeUserTheme === 'violet') {\n      return 2;\n    }\n  };\n  //   const [aside, setAside] = useState(false);\n  //   const location = useLocation();\n\n  //   const board = useSelector(state => state.currentBoardId); // Ensure correct state selection\n\n  //   function handleAsideHide() {\n  //     setAside(prevState => !prevState);\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[selectThemeIndex()],\n    children: /*#__PURE__*/_jsxDEV(HomePageContainer, {\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"xVvilkRDXgARgwN/BGv0X5rfkE8=\", false, function () {\n  return [useTheme, useParams, useSelector];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useTheme","Header","HomePageContainer","MainContainer","ThemeProvider","selectTheme","Board","useParams","useSelector","jsxDEV","_jsxDEV","HomePage","_s","theme","boardName","activeUserTheme","selectThemeIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Home/Home.jsx"],"sourcesContent":["// import { useState } from 'react';\n// import { Outlet, useLocation } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\nimport { useTheme } from '@mui/material';\nimport Header from '../Header/Header';\n// import ScreensPage from '../../components/ScreensPage/ScreensPage';\n\nimport { HomePageContainer, MainContainer } from './Home.styled';\nimport { ThemeProvider } from 'styled-components';\nimport { selectTheme } from 'redux/selectors';\n\nimport Board from 'pages/ScreensPage/Board/Board';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n// import { MainWrapper } from '../../components/ScreensPage/ScreensPage.styled';\n\nconst HomePage = () => {\n  const theme = useTheme();\n  const { boardName } = useParams();\n  const activeUserTheme = useSelector(selectTheme);\n\n  const selectThemeIndex = () => {\n    if (activeUserTheme === 'dark') {\n      return 0;\n    } else if (activeUserTheme === 'light') {\n      return 1;\n    } else if (activeUserTheme === 'violet') {\n      return 2;\n    }\n  };\n  //   const [aside, setAside] = useState(false);\n  //   const location = useLocation();\n\n  //   const board = useSelector(state => state.currentBoardId); // Ensure correct state selection\n\n  //   function handleAsideHide() {\n  //     setAside(prevState => !prevState);\n  //   }\n\n  return (\n    <ThemeProvider theme={theme[selectThemeIndex()]}>\n      <HomePageContainer>\n        <MainContainer>\n          <Header /> <Board />\n        </MainContainer>\n      </HomePageContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,eAAe;AACxC,OAAOC,MAAM,MAAM,kBAAkB;AACrC;;AAEA,SAASC,iBAAiB,EAAEC,aAAa,QAAQ,eAAe;AAChE,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,WAAW,QAAQ,iBAAiB;AAE7C,OAAOC,KAAK,MAAM,+BAA+B;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,KAAK,GAAGb,QAAQ,CAAC,CAAC;EACxB,MAAM;IAAEc;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;EACjC,MAAMQ,eAAe,GAAGP,WAAW,CAACH,WAAW,CAAC;EAEhD,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAID,eAAe,KAAK,MAAM,EAAE;MAC9B,OAAO,CAAC;IACV,CAAC,MAAM,IAAIA,eAAe,KAAK,OAAO,EAAE;MACtC,OAAO,CAAC;IACV,CAAC,MAAM,IAAIA,eAAe,KAAK,QAAQ,EAAE;MACvC,OAAO,CAAC;IACV;EACF,CAAC;EACD;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA,oBACEL,OAAA,CAACN,aAAa;IAACS,KAAK,EAAEA,KAAK,CAACG,gBAAgB,CAAC,CAAC,CAAE;IAAAC,QAAA,eAC9CP,OAAA,CAACR,iBAAiB;MAAAe,QAAA,eAChBP,OAAA,CAACP,aAAa;QAAAc,QAAA,gBACZP,OAAA,CAACT,MAAM;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,eAAAX,OAAA,CAACJ,KAAK;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEpB,CAAC;AAACT,EAAA,CAhCID,QAAQ;EAAA,QACEX,QAAQ,EACAO,SAAS,EACPC,WAAW;AAAA;AAAAc,EAAA,GAH/BX,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}