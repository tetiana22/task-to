{"ast":null,"code":"import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const authInstance = axios.create({\n  baseURL: ' https://project-codebusters-backend.onrender.com/api'\n});\nexport const setToken = token => {\n  authInstance.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\nexport const clearToken = () => {\n  authInstance.defaults.headers.common.Authorization = '';\n};\nexport const registration = createAsyncThunk('auth/apiRegisterUser', async (formData, thunkApi) => {\n  try {\n    const {\n      data\n    } = await authInstance.post('/auth/register', formData);\n    setToken(data.token);\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const login = createAsyncThunk('auth/apiLoginUser', async (formData, thunkApi) => {\n  try {\n    const {\n      data\n    } = await authInstance.post('/auth/login', formData);\n    setToken(data.token);\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});","map":{"version":3,"names":["createSlice","isAnyOf","createAsyncThunk","axios","authInstance","create","baseURL","setToken","token","defaults","headers","common","Authorization","clearToken","registration","formData","thunkApi","data","post","error","rejectWithValue","message","login"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/redux/authorization/authReducer.js"],"sourcesContent":["import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const authInstance = axios.create({\n  baseURL: ' https://project-codebusters-backend.onrender.com/api',\n});\n\nexport const setToken = token => {\n  authInstance.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nexport const clearToken = () => {\n  authInstance.defaults.headers.common.Authorization = '';\n};\nexport const registration = createAsyncThunk(\n  'auth/apiRegisterUser',\n  async (formData, thunkApi) => {\n    try {\n      const { data } = await authInstance.post('/auth/register', formData);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const login = createAsyncThunk(\n  'auth/apiLoginUser',\n  async (formData, thunkApi) => {\n    try {\n      const { data } = await authInstance.post('/auth/login', formData);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AACvD,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EAC/BJ,YAAY,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;AACxE,CAAC;AAED,OAAO,MAAMK,UAAU,GAAGA,CAAA,KAAM;EAC9BT,YAAY,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,aAAa,GAAG,EAAE;AACzD,CAAC;AACD,OAAO,MAAME,YAAY,GAAGZ,gBAAgB,CAC1C,sBAAsB,EACtB,OAAOa,QAAQ,EAAEC,QAAQ,KAAK;EAC5B,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMb,YAAY,CAACc,IAAI,CAAC,gBAAgB,EAAEH,QAAQ,CAAC;IACpER,QAAQ,CAACU,IAAI,CAACT,KAAK,CAAC;IACpB,OAAOS,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOH,QAAQ,CAACI,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGpB,gBAAgB,CACnC,mBAAmB,EACnB,OAAOa,QAAQ,EAAEC,QAAQ,KAAK;EAC5B,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMb,YAAY,CAACc,IAAI,CAAC,aAAa,EAAEH,QAAQ,CAAC;IACjER,QAAQ,CAACU,IAAI,CAACT,KAAK,CAAC;IACpB,OAAOS,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOH,QAAQ,CAACI,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module"}