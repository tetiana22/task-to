{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/AddColumn/AddColumn.jsx\",\n  _s = $RefreshSig$();\nimport ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport { Input, Error, Form } from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../redux/cards/cardsReducers';\n// import { selectColumns } from '../../redux/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddColumn = _ref => {\n  _s();\n  let {\n    text,\n    boardId\n  } = _ref;\n  const dispatch = useDispatch();\n  //   const columns = useSelector(selectColumns);\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      touched = {}\n    },\n    reset\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: '',\n      boardId: ''\n    },\n    resolver: yupResolver(editColumnSchema)\n  });\n  const onSubmit = data => {\n    const alreadyExistsIndex = columns.findIndex;\n    item => {\n      const name = item.text.toLowerCase();\n      const newName = text.toLowerCase();\n      return name === newName;\n    };\n    if (alreadyExistsIndex >= 0) {\n      const alreadyExistsColumn = columns[alreadyExistsIndex];\n      return `${alreadyExistsColumn.name} is already added to contact list`;\n    } else {\n      dispatch(addColumn({\n        currentBoarddId,\n        data\n      }));\n      // console.log({ text });\n    }\n\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      id: \"text\",\n      placeholder: \"To do\",\n      ...register('text'),\n      error: touched.text && errors.text && errors.text.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), errors.text && /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.text.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPlus, {\n      type: \"submit\",\n      approve: \"true\",\n      text: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AddColumn, \"Gy0Yg2QhYd3v1ogi+fNavHJWLN0=\", false, function () {\n  return [useDispatch, useForm];\n});\n_c = AddColumn;\nexport default AddColumn;\nvar _c;\n$RefreshReg$(_c, \"AddColumn\");","map":{"version":3,"names":["ButtonPlus","editColumnSchema","Input","Error","Form","useForm","yupResolver","useDispatch","addColumn","jsxDEV","_jsxDEV","AddColumn","_ref","_s","text","boardId","dispatch","register","handleSubmit","formState","errors","touched","reset","mode","defaultValues","resolver","onSubmit","data","alreadyExistsIndex","columns","findIndex","item","name","toLowerCase","newName","alreadyExistsColumn","currentBoarddId","children","type","id","placeholder","error","message","fileName","_jsxFileName","lineNumber","columnNumber","approve","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/AddColumn/AddColumn.jsx"],"sourcesContent":["import ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport {\n  Input,\n  Error,\n  Form,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../redux/cards/cardsReducers';\n// import { selectColumns } from '../../redux/selectors';\n\nconst AddColumn = ({ text, boardId }) => {\n  const dispatch = useDispatch();\n  //   const columns = useSelector(selectColumns);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: '',\n      boardId: '',\n    },\n    resolver: yupResolver(editColumnSchema),\n  });\n\n  const onSubmit = data => {\n    const alreadyExistsIndex = columns.findIndex;\n    item => {\n      const name = item.text.toLowerCase();\n      const newName = text.toLowerCase();\n      return name === newName;\n    };\n    if (alreadyExistsIndex >= 0) {\n      const alreadyExistsColumn = columns[alreadyExistsIndex];\n      return `${alreadyExistsColumn.name} is already added to contact list`;\n    } else {\n      dispatch(addColumn({ currentBoarddId, data }));\n      // console.log({ text });\n    }\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"text\"\n        id=\"text\"\n        placeholder=\"To do\"\n        {...register('text')}\n        error={touched.text && errors.text && errors.text.message}\n      />\n      {errors.text && <Error>{errors.text.message}</Error>}\n\n      <ButtonPlus type=\"submit\" approve=\"true\" text=\"Add\" />\n    </Form>\n  );\n};\n\nexport default AddColumn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}