{"ast":null,"code":"import * as yup from 'yup';\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nexport const logInSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup.string().min(8, 'Min length 8').max(64, 'Max length 64').required()\n});\nexport const registrationSchema = yup.object().shape({\n  name: yup.string().min(2, 'Name must be at least 2 characters').max(32, 'Name must be at most 32 characters').required('Name is required'),\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup.string().min(8, 'Password must be at least 8 characters long').required('Password is required')\n});\nexport const needHelpSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  message: yup.string().min(7).max(230).required('Comment is required')\n});","map":{"version":3,"names":["yup","emailRegexp","logInSchema","object","shape","email","string","matches","required","password","min","max","registrationSchema","name","needHelpSchema","message"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/validation/schema.jsx"],"sourcesContent":["import * as yup from 'yup';\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const logInSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup\n    .string()\n    .min(8, 'Min length 8')\n    .max(64, 'Max length 64')\n    .required(),\n});\n\nexport const registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Name must be at most 32 characters')\n    .required('Name is required'),\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters long')\n    .required('Password is required'),\n});\n\nexport const needHelpSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  message: yup.string().min(7).max(230).required('Comment is required'),\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,MAAMC,WAAW,GAAG,6CAA6C;AAEjE,OAAO,MAAMC,WAAW,GAAGF,GAAG,CAACG,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC5CC,KAAK,EAAEL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,OAAO,CAACN,WAAW,EAAE,oBAAoB,CAAC,CAACO,QAAQ,CAAC,CAAC;EACzEC,QAAQ,EAAET,GAAG,CACVM,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC,CACtBC,GAAG,CAAC,EAAE,EAAE,eAAe,CAAC,CACxBH,QAAQ,CAAC;AACd,CAAC,CAAC;AAEF,OAAO,MAAMI,kBAAkB,GAAGZ,GAAG,CAACG,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACnDS,IAAI,EAAEb,GAAG,CACNM,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,EAAE,oCAAoC,CAAC,CAC5CC,GAAG,CAAC,EAAE,EAAE,oCAAoC,CAAC,CAC7CH,QAAQ,CAAC,kBAAkB,CAAC;EAC/BH,KAAK,EAAEL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,OAAO,CAACN,WAAW,EAAE,oBAAoB,CAAC,CAACO,QAAQ,CAAC,CAAC;EACzEC,QAAQ,EAAET,GAAG,CACVM,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,EAAE,6CAA6C,CAAC,CACrDF,QAAQ,CAAC,sBAAsB;AACpC,CAAC,CAAC;AAEF,OAAO,MAAMM,cAAc,GAAGd,GAAG,CAACG,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC/CC,KAAK,EAAEL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,OAAO,CAACN,WAAW,EAAE,oBAAoB,CAAC,CAACO,QAAQ,CAAC,CAAC;EACzEO,OAAO,EAAEf,GAAG,CAACM,MAAM,CAAC,CAAC,CAACI,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC,CAACH,QAAQ,CAAC,qBAAqB;AACtE,CAAC,CAAC"},"metadata":{},"sourceType":"module"}