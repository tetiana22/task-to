{"ast":null,"code":"import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nconst {\n  addColumn,\n  editColumn,\n  createBoard,\n  editBoard,\n  getAllDashboards,\n  deleteDashboard,\n  getDashboardById\n} = require('./cardsReducers');\nconst initialState = {\n  boards: [],\n  currentBoardId: null,\n  // cards: [],\n  // cardId: null,\n  // columns: [],\n  // columnId: null,\n  isLoading: false,\n  error: null,\n  columnsLength: 0,\n  currentBg: '',\n  currentName: '',\n  selectedPriority: 'show all'\n};\nconst boardsSlice = createSlice({\n  name: 'dashboards',\n  initialState,\n  reducers: {\n    setCurrentBoardId(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.currentBoardId = payload;\n    }\n  },\n  extraReducers: builder => builder.addCase(getAllDashboards.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.boards = action.payload;\n    state.error = null;\n  }).addCase(createBoard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.isLoggedIn = true;\n    state.currentBoardId = action.payload._id;\n    state.boards = [...state.boards, action.payload];\n    // state.boards.push(action.payload);\n  }).addCase(deleteDashboard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    const idx = state.dashboards.findIndex(item => item._id === action.payload.deletedBoard._id);\n    state.dashboards.splice(idx, 1);\n  })\n  // .addCase(getDashboardById.fulfilled, (state, action) => {\n  //   state.isLoading = false;\n  //   state.currentBoardId = action.payload;\n  //   state.error = null;\n\n  //   state.currentBg = action.payload?.board?.backgroundURL;\n  //   state.currentName = action.payload?.board?.name;\n  //   state.columnsLength = action.payload?.columns?.length;\n  //   state.selectedPriority = 'show all';\n  // })\n  .addCase(editBoard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    const {\n      _id,\n      name,\n      icon,\n      backgroundURL\n    } = action.payload;\n    const boardIndex = state.boards.findIndex(item => item._id === _id);\n    state.boards[boardIndex] = {\n      ...state.boards[boardIndex],\n      name,\n      icon,\n      backgroundURL\n    };\n    state.currentName = name;\n    state.currentBg = backgroundURL;\n  }).addCase(addColumn.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.isLoggedIn = true;\n    state.currentBoardId.columns.push(action.payload);\n  }).addCase(editColumn.fulfilled, (state, action) => {\n    const {\n      _id,\n      text\n    } = action.payload;\n    const columnIndex = state.columns.findIndex(item => item._id === _id);\n    state.columns[columnIndex].text = text;\n    state.isLoading = false;\n    state.error = null;\n  }).addMatcher(isAnyOf(addColumn.pending, editColumn.pending, createBoard.pending, editBoard.pending, getAllDashboards.pending, deleteDashboard.pending, getDashboardById.pending), state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addMatcher(isAnyOf(addColumn.rejected, editColumn.rejected, createBoard.rejected, editBoard.rejected, getAllDashboards.rejected, deleteDashboard.rejected, getDashboardById.rejected), (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n  })\n});\nexport const boardsReducer = boardsSlice.reducer;","map":{"version":3,"names":["createSlice","isAnyOf","addColumn","editColumn","createBoard","editBoard","getAllDashboards","deleteDashboard","getDashboardById","require","initialState","boards","currentBoardId","isLoading","error","columnsLength","currentBg","currentName","selectedPriority","boardsSlice","name","reducers","setCurrentBoardId","state","_ref","payload","extraReducers","builder","addCase","fulfilled","action","isLoggedIn","_id","idx","dashboards","findIndex","item","deletedBoard","splice","icon","backgroundURL","boardIndex","columns","push","text","columnIndex","addMatcher","pending","rejected","boardsReducer","reducer"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/redux/cards/cardsSlice.jsx"],"sourcesContent":["import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nconst {\n  addColumn,\n  editColumn,\n  createBoard,\n  editBoard,\n  getAllDashboards,\n  deleteDashboard,\n  getDashboardById,\n} = require('./cardsReducers');\n\nconst initialState = {\n  boards: [],\n\n  currentBoardId: null,\n  // cards: [],\n  // cardId: null,\n  // columns: [],\n  // columnId: null,\n  isLoading: false,\n  error: null,\n  columnsLength: 0,\n  currentBg: '',\n  currentName: '',\n  selectedPriority: 'show all',\n};\n\nconst boardsSlice = createSlice({\n  name: 'dashboards',\n  initialState,\n  reducers: {\n    setCurrentBoardId(state, { payload }) {\n      state.currentBoardId = payload;\n    },\n  },\n  extraReducers: builder =>\n    builder\n      .addCase(getAllDashboards.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.boards = action.payload;\n        state.error = null;\n      })\n      .addCase(createBoard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isLoggedIn = true;\n        state.currentBoardId = action.payload._id;\n        state.boards = [...state.boards, action.payload];\n        // state.boards.push(action.payload);\n      })\n      .addCase(deleteDashboard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        const idx = state.dashboards.findIndex(\n          item => item._id === action.payload.deletedBoard._id\n        );\n\n        state.dashboards.splice(idx, 1);\n      })\n      // .addCase(getDashboardById.fulfilled, (state, action) => {\n      //   state.isLoading = false;\n      //   state.currentBoardId = action.payload;\n      //   state.error = null;\n\n      //   state.currentBg = action.payload?.board?.backgroundURL;\n      //   state.currentName = action.payload?.board?.name;\n      //   state.columnsLength = action.payload?.columns?.length;\n      //   state.selectedPriority = 'show all';\n      // })\n      .addCase(editBoard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        const { _id, name, icon, backgroundURL } = action.payload;\n\n        const boardIndex = state.boards.findIndex(item => item._id === _id);\n\n        state.boards[boardIndex] = {\n          ...state.boards[boardIndex],\n          name,\n          icon,\n          backgroundURL,\n        };\n        state.currentName = name;\n        state.currentBg = backgroundURL;\n      })\n\n      .addCase(addColumn.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isLoggedIn = true;\n        state.currentBoardId.columns.push(action.payload);\n      })\n      .addCase(editColumn.fulfilled, (state, action) => {\n        const { _id, text } = action.payload;\n        const columnIndex = state.columns.findIndex(item => item._id === _id);\n        state.columns[columnIndex].text = text;\n        state.isLoading = false;\n        state.error = null;\n      })\n      .addMatcher(\n        isAnyOf(\n          addColumn.pending,\n          editColumn.pending,\n          createBoard.pending,\n          editBoard.pending,\n          getAllDashboards.pending,\n          deleteDashboard.pending,\n          getDashboardById.pending\n        ),\n        state => {\n          state.isLoading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          addColumn.rejected,\n          editColumn.rejected,\n          createBoard.rejected,\n          editBoard.rejected,\n          getAllDashboards.rejected,\n          deleteDashboard.rejected,\n          getDashboardById.rejected\n        ),\n        (state, action) => {\n          state.isLoading = false;\n          state.error = action.payload;\n        }\n      ),\n});\nexport const boardsReducer = boardsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}