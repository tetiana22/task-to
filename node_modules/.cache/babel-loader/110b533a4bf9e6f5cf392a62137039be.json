{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Home/Home.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import { Outlet, useLocation } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\nimport { useTheme } from '@mui/material';\nimport Header from '../Header/Header';\n// import ScreensPage from '../../components/ScreensPage/ScreensPage';\n\nimport { HomePageContainer, MainContainer } from './Home.styled';\nimport { ThemeProvider } from 'styled-components';\nimport { selectTheme } from '../../redux/selectors';\nimport Board from 'pages/ScreensPage/Board/Board';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDashboardById, getAllDashboards } from 'redux/cards/cardsReducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const theme = useTheme();\n  const {\n    boardName\n  } = useParams();\n  const activeUserTheme = useSelector(selectTheme);\n  const dispatch = useDispatch();\n  const selectThemeIndex = () => {\n    if (activeUserTheme === 'dark') {\n      return 0;\n    } else if (activeUserTheme === 'light') {\n      return 1;\n    } else if (activeUserTheme === 'violet') {\n      return 2;\n    }\n  };\n  useEffect(() => {\n    dispatch(getAllDashboards()).then(data => {\n      if (data.payload.length === 0) {\n        return;\n      }\n      dispatch(getDashboardById(data.payload[0]._id));\n      navigate(`/home/${data.payload[0].name}`);\n    });\n  }, [dispatch]);\n\n  //   const [aside, setAside] = useState(false);\n  //   const location = useLocation();\n\n  //   const board = useSelector(state => state.currentBoardId); // Ensure correct state selection\n\n  //   function handleAsideHide() {\n  //     setAside(prevState => !prevState);\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[selectThemeIndex()],\n    children: /*#__PURE__*/_jsxDEV(HomePageContainer, {\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"WsWO4qoLCX07imGCXta86Ap3sCA=\", false, function () {\n  return [useTheme, useParams, useSelector, useDispatch];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useTheme","Header","HomePageContainer","MainContainer","ThemeProvider","selectTheme","Board","useParams","useDispatch","useSelector","getDashboardById","getAllDashboards","jsxDEV","_jsxDEV","HomePage","_s","theme","boardName","activeUserTheme","dispatch","selectThemeIndex","useEffect","then","data","payload","length","_id","navigate","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Home/Home.jsx"],"sourcesContent":["// import { useState } from 'react';\n// import { Outlet, useLocation } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\nimport { useTheme } from '@mui/material';\nimport Header from '../Header/Header';\n// import ScreensPage from '../../components/ScreensPage/ScreensPage';\n\nimport { HomePageContainer, MainContainer } from './Home.styled';\nimport { ThemeProvider } from 'styled-components';\nimport { selectTheme } from '../../redux/selectors';\n\nimport Board from 'pages/ScreensPage/Board/Board';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDashboardById, getAllDashboards } from 'redux/cards/cardsReducers';\n\nconst HomePage = () => {\n  const theme = useTheme();\n  const { boardName } = useParams();\n  const activeUserTheme = useSelector(selectTheme);\n  const dispatch = useDispatch();\n\n  const selectThemeIndex = () => {\n    if (activeUserTheme === 'dark') {\n      return 0;\n    } else if (activeUserTheme === 'light') {\n      return 1;\n    } else if (activeUserTheme === 'violet') {\n      return 2;\n    }\n  };\n  useEffect(() => {\n    dispatch(getAllDashboards()).then(data => {\n      if (data.payload.length === 0) {\n        return;\n      }\n\n      dispatch(getDashboardById(data.payload[0]._id));\n      navigate(`/home/${data.payload[0].name}`);\n    });\n  }, [dispatch]);\n\n  //   const [aside, setAside] = useState(false);\n  //   const location = useLocation();\n\n  //   const board = useSelector(state => state.currentBoardId); // Ensure correct state selection\n\n  //   function handleAsideHide() {\n  //     setAside(prevState => !prevState);\n  //   }\n\n  return (\n    <ThemeProvider theme={theme[selectThemeIndex()]}>\n      <HomePageContainer>\n        <MainContainer>\n          <Header /> <Board />\n        </MainContainer>\n      </HomePageContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,eAAe;AACxC,OAAOC,MAAM,MAAM,kBAAkB;AACrC;;AAEA,SAASC,iBAAiB,EAAEC,aAAa,QAAQ,eAAe;AAChE,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,WAAW,QAAQ,uBAAuB;AAEnD,OAAOC,KAAK,MAAM,+BAA+B;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,KAAK,GAAGhB,QAAQ,CAAC,CAAC;EACxB,MAAM;IAAEiB;EAAU,CAAC,GAAGV,SAAS,CAAC,CAAC;EACjC,MAAMW,eAAe,GAAGT,WAAW,CAACJ,WAAW,CAAC;EAChD,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIF,eAAe,KAAK,MAAM,EAAE;MAC9B,OAAO,CAAC;IACV,CAAC,MAAM,IAAIA,eAAe,KAAK,OAAO,EAAE;MACtC,OAAO,CAAC;IACV,CAAC,MAAM,IAAIA,eAAe,KAAK,QAAQ,EAAE;MACvC,OAAO,CAAC;IACV;EACF,CAAC;EACDG,SAAS,CAAC,MAAM;IACdF,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC,CAACW,IAAI,CAACC,IAAI,IAAI;MACxC,IAAIA,IAAI,CAACC,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;QAC7B;MACF;MAEAN,QAAQ,CAACT,gBAAgB,CAACa,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAAC;MAC/CC,QAAQ,CAAE,SAAQJ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACI,IAAK,EAAC,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;;EAEd;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA,oBACEN,OAAA,CAACT,aAAa;IAACY,KAAK,EAAEA,KAAK,CAACI,gBAAgB,CAAC,CAAC,CAAE;IAAAS,QAAA,eAC9ChB,OAAA,CAACX,iBAAiB;MAAA2B,QAAA,eAChBhB,OAAA,CAACV,aAAa;QAAA0B,QAAA,gBACZhB,OAAA,CAACZ,MAAM;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,eAAApB,OAAA,CAACP,KAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEpB,CAAC;AAAClB,EAAA,CA5CID,QAAQ;EAAA,QACEd,QAAQ,EACAO,SAAS,EACPE,WAAW,EAClBD,WAAW;AAAA;AAAA0B,EAAA,GAJxBpB,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}