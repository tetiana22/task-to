{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/AddColumn/AddColumn.jsx\",\n  _s = $RefreshSig$();\nimport ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport { Input, Error, Form } from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn } from '../../redux/cards/cardsReducers';\nimport { selectBoarsId, selectColumns } from '../../redux/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddColumn = () => {\n  _s();\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const bordId = useSelector(selectBoarsId);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      touched = {}\n    },\n    reset\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: ''\n    },\n    resolver: yupResolver(editColumnSchema)\n  });\n  const onSubmit = (data, bordId) => {\n    const alreadyExistsIndex = columns.findIndex;\n    if (alreadyExistsIndex >= 0) {\n      const alreadyExistsColumn = columns[alreadyExistsIndex];\n      return `${alreadyExistsColumn.name} is already added to contact list`;\n    } else {\n      dispatch(addColumn({\n        bordId,\n        data\n      }));\n      // console.log({ text });\n    }\n\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      id: \"text\",\n      placeholder: \"To do\",\n      ...register('text'),\n      error: touched.text && errors.text && errors.text.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), errors.text && /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.text.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPlus, {\n      type: \"submit\",\n      approve: \"true\",\n      text: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AddColumn, \"2m9NWQjsp8w224vlTrPpdOSFSX8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm];\n});\n_c = AddColumn;\nexport default AddColumn;\nvar _c;\n$RefreshReg$(_c, \"AddColumn\");","map":{"version":3,"names":["ButtonPlus","editColumnSchema","Input","Error","Form","useForm","yupResolver","useDispatch","useSelector","addColumn","selectBoarsId","selectColumns","jsxDEV","_jsxDEV","AddColumn","_s","dispatch","columns","bordId","register","handleSubmit","formState","errors","touched","reset","mode","defaultValues","text","resolver","onSubmit","data","alreadyExistsIndex","findIndex","alreadyExistsColumn","name","children","type","id","placeholder","error","message","fileName","_jsxFileName","lineNumber","columnNumber","approve","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/AddColumn/AddColumn.jsx"],"sourcesContent":["import ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport {\n  Input,\n  Error,\n  Form,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn } from '../../redux/cards/cardsReducers';\nimport { selectBoarsId, selectColumns } from '../../redux/selectors';\n\nconst AddColumn = () => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const bordId = useSelector(selectBoarsId);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: '',\n    },\n    resolver: yupResolver(editColumnSchema),\n  });\n\n  const onSubmit = (data, bordId) => {\n    const alreadyExistsIndex = columns.findIndex;\n\n    if (alreadyExistsIndex >= 0) {\n      const alreadyExistsColumn = columns[alreadyExistsIndex];\n      return `${alreadyExistsColumn.name} is already added to contact list`;\n    } else {\n      dispatch(addColumn({ bordId, data }));\n      // console.log({ text });\n    }\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"text\"\n        id=\"text\"\n        placeholder=\"To do\"\n        {...register('text')}\n        error={touched.text && errors.text && errors.text.message}\n      />\n      {errors.text && <Error>{errors.text.message}</Error>}\n\n      <ButtonPlus type=\"submit\" approve=\"true\" text=\"Add\" />\n    </Form>\n  );\n};\n\nexport default AddColumn;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,kCAAkC;AACzD,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SACEC,KAAK,EACLC,KAAK,EACLC,IAAI,QACC,sDAAsD;AAC7D,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,iCAAiC;AAC3D,SAASC,aAAa,EAAEC,aAAa,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,OAAO,GAAGT,WAAW,CAACG,aAAa,CAAC;EAC1C,MAAMO,MAAM,GAAGV,WAAW,CAACE,aAAa,CAAC;EACzC,MAAM;IACJS,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC,MAAM;MAAEC,OAAO,GAAG,CAAC;IAAE,CAAC;IACnCC;EACF,CAAC,GAAGnB,OAAO,CAAC;IACVoB,IAAI,EAAE,QAAQ;IACdC,aAAa,EAAE;MACbC,IAAI,EAAE;IACR,CAAC;IACDC,QAAQ,EAAEtB,WAAW,CAACL,gBAAgB;EACxC,CAAC,CAAC;EAEF,MAAM4B,QAAQ,GAAGA,CAACC,IAAI,EAAEZ,MAAM,KAAK;IACjC,MAAMa,kBAAkB,GAAGd,OAAO,CAACe,SAAS;IAE5C,IAAID,kBAAkB,IAAI,CAAC,EAAE;MAC3B,MAAME,mBAAmB,GAAGhB,OAAO,CAACc,kBAAkB,CAAC;MACvD,OAAQ,GAAEE,mBAAmB,CAACC,IAAK,mCAAkC;IACvE,CAAC,MAAM;MACLlB,QAAQ,CAACP,SAAS,CAAC;QAAES,MAAM;QAAEY;MAAK,CAAC,CAAC,CAAC;MACrC;IACF;;IACAN,KAAK,CAAC,CAAC;EACT,CAAC;EAED,oBACEX,OAAA,CAACT,IAAI;IAACyB,QAAQ,EAAET,YAAY,CAACS,QAAQ,CAAE;IAAAM,QAAA,gBACrCtB,OAAA,CAACX,KAAK;MACJkC,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,MAAM;MACTC,WAAW,EAAC,OAAO;MAAA,GACfnB,QAAQ,CAAC,MAAM,CAAC;MACpBoB,KAAK,EAAEhB,OAAO,CAACI,IAAI,IAAIL,MAAM,CAACK,IAAI,IAAIL,MAAM,CAACK,IAAI,CAACa;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,EACDtB,MAAM,CAACK,IAAI,iBAAId,OAAA,CAACV,KAAK;MAAAgC,QAAA,EAAEb,MAAM,CAACK,IAAI,CAACa;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpD/B,OAAA,CAACb,UAAU;MAACoC,IAAI,EAAC,QAAQ;MAACS,OAAO,EAAC,MAAM;MAAClB,IAAI,EAAC;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEX,CAAC;AAAC7B,EAAA,CA5CID,SAAS;EAAA,QACIP,WAAW,EACZC,WAAW,EACZA,WAAW,EAMtBH,OAAO;AAAA;AAAAyC,EAAA,GATPhC,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}