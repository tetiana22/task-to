{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const authInstance = axios.create({\n  baseURL: 'https://final-project-backend-hsxg.onrender.com/'\n});\nexport const setToken = token => {\n  authInstance.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\nexport const clearToken = () => {\n  authInstance.defaults.headers.common.Authorization = '';\n};\nexport const registration = createAsyncThunk('users/register', async (formData, thunkApi) => {\n  try {\n    const {\n      data\n    } = await authInstance.post('users/register', formData);\n    setToken(data.token);\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const logoutUser = createAsyncThunk('users/logout', async (_, thunkApi) => {\n  try {\n    await authInstance.post('users/logout');\n    clearToken();\n    return;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const signin = createAsyncThunk('users/signin', async (formData, thunkApi) => {\n  try {\n    const {\n      data\n    } = await authInstance.post('users/login', formData);\n    setToken(data.token);\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const currentUser = createAsyncThunk('users/currentUser', async (_, thunkApi) => {\n  const state = thunkApi.getState();\n  const token = state.auth.token;\n  if (!token) return thunkApi.rejectWithValue('You don’t have any token!');\n  try {\n    setToken(token);\n    const {\n      data\n    } = await authInstance.get('users/current');\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const changeTheme = createAsyncThunk('users/theme', async (_ref, thunkAPI) => {\n  let {\n    theme\n  } = _ref;\n  try {\n    const {\n      data\n    } = await authInstance.patch('users/theme', {\n      theme\n    });\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const updateUser = createAsyncThunk('users/profile', async (formData, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await authInstance.put('users/update', formData);\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const needHelp = createAsyncThunk('users/needHelp', async (formData, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await axios.post('users/feedback', formData);\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const refreshUser = createAsyncThunk('users/refreshUser', async (_, thunkApi) => {\n  const state = thunkApi.getState();\n  const token = state.auth.token;\n  if (!token) return thunkApi.rejectWithValue('You don’t have any token!');\n  try {\n    setToken(token);\n    const {\n      data\n    } = await authInstance.get('/users/current');\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","authInstance","create","baseURL","setToken","token","defaults","headers","common","Authorization","clearToken","registration","formData","thunkApi","data","post","error","rejectWithValue","message","logoutUser","_","signin","currentUser","state","getState","auth","get","changeTheme","_ref","thunkAPI","theme","patch","updateUser","put","needHelp","refreshUser"],"sources":["/Users/tetanaglincak/Desktop/taskpro-finish/task-to/src/redux/authorization/authReducer.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const authInstance = axios.create({\n  baseURL: 'https://final-project-backend-hsxg.onrender.com/',\n});\n\nexport const setToken = token => {\n  authInstance.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nexport const clearToken = () => {\n  authInstance.defaults.headers.common.Authorization = '';\n};\n\nexport const registration = createAsyncThunk(\n  'users/register',\n  async (formData, thunkApi) => {\n    try {\n      const { data } = await authInstance.post('users/register', formData);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logoutUser = createAsyncThunk(\n  'users/logout',\n  async (_, thunkApi) => {\n    try {\n      await authInstance.post('users/logout');\n      clearToken();\n\n      return;\n    } catch (error) {\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const signin = createAsyncThunk(\n  'users/signin',\n  async (formData, thunkApi) => {\n    try {\n      const { data } = await authInstance.post('users/login', formData);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const currentUser = createAsyncThunk(\n  'users/currentUser',\n  async (_, thunkApi) => {\n    const state = thunkApi.getState();\n    const token = state.auth.token;\n    if (!token) return thunkApi.rejectWithValue('You don’t have any token!');\n    try {\n      setToken(token);\n      const { data } = await authInstance.get('users/current');\n      return data;\n    } catch (error) {\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\nexport const changeTheme = createAsyncThunk(\n  'users/theme',\n  async ({ theme }, thunkAPI) => {\n    try {\n      const { data } = await authInstance.patch('users/theme', { theme });\n\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\nexport const updateUser = createAsyncThunk(\n  'users/profile',\n  async (formData, thunkAPI) => {\n    try {\n      const { data } = await authInstance.put('users/update', formData);\n\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const needHelp = createAsyncThunk(\n  'users/needHelp',\n  async (formData, thunkAPI) => {\n    try {\n      const { data } = await axios.post('users/feedback', formData);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const refreshUser = createAsyncThunk(\n  'users/refreshUser',\n  async (_, thunkApi) => {\n    const state = thunkApi.getState();\n    const token = state.auth.token;\n    if (!token) return thunkApi.rejectWithValue('You don’t have any token!');\n    try {\n      setToken(token);\n      const { data } = await authInstance.get('/users/current');\n\n      return data;\n    } catch (error) {\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}