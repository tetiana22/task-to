{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Sidebar/BordItem/BordItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// Assuming these are action creators\nimport { deleteColumn } from '../../../redux/cards/cardsReducers'; // Assuming this is an action creator\nimport { useNavigate } from 'react-router-dom';\nimport { closeMenuMode } from '../../../redux/menu/menuSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardItem = _ref => {\n  _s();\n  let {\n    board\n  } = _ref;\n  const dispatch = useDispatch();\n  const currBoardId = useSelector(state => state.currentBoardId);\n  const navigate = useNavigate();\n  const handleNavigate = e => {\n    if (e.target.dataset.icon) {\n      return; // If the click is on an icon, return early\n    }\n\n    navigate(`/home/${board._id}`);\n    dispatch(closeMenuMode());\n    if (board._id !== currBoardId) {\n      dispatch(deleteColumn());\n    }\n  };\n  const handleEditBoard = () => {\n    // Define the function or remove if not used\n  };\n  const handleWarningBoard = () => {\n    // Define the function or remove if not used\n  };\n  const checkTextLength = text => {\n    // Implement your logic for checking text length\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    id: \"_id\",\n    onClick: handleNavigate,\n    className: board._id,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: board.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-icon\": \"icon\",\n        onClick: handleEditBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleWarningBoard,\n        \"data-icon\": \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardItem, \"ZCg6r+q1r2FlLegXPRzH3I+Ye9Q=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = BoardItem;\nexport default BoardItem;\nvar _c;\n$RefreshReg$(_c, \"BoardItem\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","deleteColumn","useNavigate","closeMenuMode","jsxDEV","_jsxDEV","BoardItem","_ref","_s","board","dispatch","currBoardId","state","currentBoardId","navigate","handleNavigate","e","target","dataset","icon","_id","handleEditBoard","handleWarningBoard","checkTextLength","text","id","onClick","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Sidebar/BordItem/BordItem.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// Assuming these are action creators\nimport { deleteColumn } from '../../../redux/cards/cardsReducers'; // Assuming this is an action creator\nimport { useNavigate } from 'react-router-dom';\nimport { closeMenuMode } from '../../../redux/menu/menuSlice';\n\nconst BoardItem = ({ board }) => {\n  const dispatch = useDispatch();\n  const currBoardId = useSelector(state => state.currentBoardId);\n\n  const navigate = useNavigate();\n\n  const handleNavigate = e => {\n    if (e.target.dataset.icon) {\n      return; // If the click is on an icon, return early\n    }\n    navigate(`/home/${board._id}`);\n\n    dispatch(closeMenuMode());\n    if (board._id !== currBoardId) {\n      dispatch(deleteColumn());\n    }\n  };\n\n  const handleEditBoard = () => {\n    // Define the function or remove if not used\n  };\n\n  const handleWarningBoard = () => {\n    // Define the function or remove if not used\n  };\n\n  const checkTextLength = text => {\n    // Implement your logic for checking text length\n  };\n\n  return (\n    <li id=\"_id\" onClick={handleNavigate} className={board._id}>\n      <div>\n        {/* Uncomment and adjust SVG code if necessary */}\n        {/* <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n          <use href={`${sprite}#icon-${board.icon}`} />\n        </svg> */}\n        <p>{board.name}</p>\n      </div>\n      <div>\n        <button data-icon=\"icon\" onClick={handleEditBoard}>\n          {/* Uncomment and adjust SVG code if necessary */}\n          {/* <svg\n            data-icon=\"icon\"\n            className={css.iconButton}\n            width=\"16\"\n            height=\"16\"\n          >\n            <use data-icon=\"icon\" href={`${sprite}#icon-pencil`} />\n          </svg> */}\n        </button>\n        <button onClick={handleWarningBoard} data-icon=\"icon\">\n          {/* Uncomment and adjust SVG code if necessary */}\n          {/* <svg\n            data-icon=\"icon\"\n            className={css.iconButton}\n            width=\"16\"\n            height=\"16\"\n          >\n            <use data-icon=\"icon\" href={`${sprite}#icon-trash`} />\n          </svg> */}\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default BoardItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,SAASC,YAAY,QAAQ,oCAAoC,CAAC,CAAC;AACnE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,SAAS,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC1B,MAAMG,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,WAAW,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,cAAc,CAAC;EAE9D,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,cAAc,GAAGC,CAAC,IAAI;IAC1B,IAAIA,CAAC,CAACC,MAAM,CAACC,OAAO,CAACC,IAAI,EAAE;MACzB,OAAO,CAAC;IACV;;IACAL,QAAQ,CAAE,SAAQL,KAAK,CAACW,GAAI,EAAC,CAAC;IAE9BV,QAAQ,CAACP,aAAa,CAAC,CAAC,CAAC;IACzB,IAAIM,KAAK,CAACW,GAAG,KAAKT,WAAW,EAAE;MAC7BD,QAAQ,CAACT,YAAY,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMoB,eAAe,GAAGA,CAAA,KAAM;IAC5B;EAAA,CACD;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;EAAA,CACD;EAED,MAAMC,eAAe,GAAGC,IAAI,IAAI;IAC9B;EAAA,CACD;EAED,oBACEnB,OAAA;IAAIoB,EAAE,EAAC,KAAK;IAACC,OAAO,EAAEX,cAAe;IAACY,SAAS,EAAElB,KAAK,CAACW,GAAI;IAAAQ,QAAA,gBACzDvB,OAAA;MAAAuB,QAAA,eAKEvB,OAAA;QAAAuB,QAAA,EAAInB,KAAK,CAACoB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACN5B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAQ,aAAU,MAAM;QAACqB,OAAO,EAAEL;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAU1C,CAAC,eACT5B,OAAA;QAAQqB,OAAO,EAAEJ,kBAAmB;QAAC,aAAU;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAU7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET,CAAC;AAACzB,EAAA,CAjEIF,SAAS;EAAA,QACIP,WAAW,EACRC,WAAW,EAEdE,WAAW;AAAA;AAAAgC,EAAA,GAJxB5B,SAAS;AAmEf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}