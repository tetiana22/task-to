{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Boards/MainDashboard/MainDashboard.jsx\",\n  _s = $RefreshSig$();\nimport TitleColumn from '../titleColumn/TitleColumn';\nimport Card from '../card/Card';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@mui/material';\n// import { useState } from 'react';\nimport { Container, ColumnsList, ColumnsListItem, Column, GalleryCards } from './MainDashboard.styled';\nimport { useAddCardMutation, useAddColumnMutation } from 'redux/boards/boardsApi';\n// import AddColumModal from 'components/Modals/AddColumModal/AddColumnModal';\nimport ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainDashboard = _ref => {\n  _s();\n  let {\n    columns\n  } = _ref;\n  //   const [addCard] = useAddCardMutation();\n  //   const [addColumn] = useAddColumnMutation();\n  //   const [isModalOpen, setIsModalCardOpen] = useState(false);\n  //   const [isModalColumnOpen, setIsModalColumnOpen] = useState(false);\n  //   const [columnId, setColumnId] = useState('');\n  //   const { boardName } = useParams();\n  const theme = useTheme();\n\n  //   const openModalСard = () => {\n  //     setIsModalCardOpen(true);\n  //   };\n\n  //   const closeModalCard = () => {\n  //     setIsModalCardOpen(false);\n  //   };\n\n  const openModalColumn = () => {\n    setIsModalColumnOpen(true);\n  };\n  const closeModalColumn = () => {\n    setIsModalColumnOpen(false);\n  };\n\n  //   const addCardInColumn = value => {\n  //     const boardId = boardName;\n\n  //     addCard({ boardId, data: value });\n  //     closeModalCard();\n  //   };\n\n  //   const openModalCard = columnId => {\n  //     setColumnId(columnId);\n\n  //     setIsModalCardOpen(true);\n  //   };\n\n  //   const addNewColumn = value => {\n  //     const boardId = boardName;\n\n  //     addColumn({ boardId, data: value });\n  //     closeModalColumn();\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    theme: theme,\n    children: [columns && columns.length > 0 && /*#__PURE__*/_jsxDEV(ColumnsList, {\n      children: columns.map(column => {\n        return /*#__PURE__*/_jsxDEV(ColumnsListItem, {\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            children: [/*#__PURE__*/_jsxDEV(TitleColumn, {\n              title: column.title,\n              owner: column.owner,\n              columnId: column._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(GalleryCards, {\n              children: column.cards.map(card => {\n                return /*#__PURE__*/_jsxDEV(Card, {\n                  title: card.title,\n                  text: card.text,\n                  priority: card.priority,\n                  deadline: card.deadline,\n                  owner: card.owner,\n                  boardId: column.owner,\n                  card: card,\n                  columns: columns\n                }, card._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ButtonPlus, {\n              type: \"submit\",\n              approve: false\n              // onClose={() => openModalCard(column._id)}\n              ,\n              text: \"Add card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, column._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPlus, {\n      type: \"submit\",\n      approve: false\n      // onClose={openModalColumn}\n      ,\n      text: \"Add Column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(MainDashboard, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = MainDashboard;\nexport default MainDashboard;\nvar _c;\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"names":["TitleColumn","Card","useParams","useTheme","Container","ColumnsList","ColumnsListItem","Column","GalleryCards","useAddCardMutation","useAddColumnMutation","ButtonPlus","jsxDEV","_jsxDEV","MainDashboard","_ref","_s","columns","theme","openModalColumn","setIsModalColumnOpen","closeModalColumn","children","length","map","column","title","owner","columnId","_id","fileName","_jsxFileName","lineNumber","columnNumber","cards","card","text","priority","deadline","boardId","type","approve","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Boards/MainDashboard/MainDashboard.jsx"],"sourcesContent":["import TitleColumn from '../titleColumn/TitleColumn';\nimport Card from '../card/Card';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@mui/material';\n// import { useState } from 'react';\nimport {\n  Container,\n  ColumnsList,\n  ColumnsListItem,\n  Column,\n  GalleryCards,\n} from './MainDashboard.styled';\nimport {\n  useAddCardMutation,\n  useAddColumnMutation,\n} from 'redux/boards/boardsApi';\n// import AddColumModal from 'components/Modals/AddColumModal/AddColumnModal';\nimport ButtonPlus from 'components/ButtonPlus/ButtonPlus';\n\nconst MainDashboard = ({ columns }) => {\n  //   const [addCard] = useAddCardMutation();\n  //   const [addColumn] = useAddColumnMutation();\n  //   const [isModalOpen, setIsModalCardOpen] = useState(false);\n  //   const [isModalColumnOpen, setIsModalColumnOpen] = useState(false);\n  //   const [columnId, setColumnId] = useState('');\n  //   const { boardName } = useParams();\n  const theme = useTheme();\n\n  //   const openModalСard = () => {\n  //     setIsModalCardOpen(true);\n  //   };\n\n  //   const closeModalCard = () => {\n  //     setIsModalCardOpen(false);\n  //   };\n\n  const openModalColumn = () => {\n    setIsModalColumnOpen(true);\n  };\n\n  const closeModalColumn = () => {\n    setIsModalColumnOpen(false);\n  };\n\n  //   const addCardInColumn = value => {\n  //     const boardId = boardName;\n\n  //     addCard({ boardId, data: value });\n  //     closeModalCard();\n  //   };\n\n  //   const openModalCard = columnId => {\n  //     setColumnId(columnId);\n\n  //     setIsModalCardOpen(true);\n  //   };\n\n  //   const addNewColumn = value => {\n  //     const boardId = boardName;\n\n  //     addColumn({ boardId, data: value });\n  //     closeModalColumn();\n  //   };\n\n  return (\n    <Container theme={theme}>\n      {columns && columns.length > 0 && (\n        <ColumnsList>\n          {columns.map(column => {\n            return (\n              <ColumnsListItem key={column._id}>\n                <Column>\n                  <TitleColumn\n                    title={column.title}\n                    owner={column.owner}\n                    columnId={column._id}\n                  />\n                  <GalleryCards>\n                    {column.cards.map(card => {\n                      return (\n                        <Card\n                          key={card._id}\n                          title={card.title}\n                          text={card.text}\n                          priority={card.priority}\n                          deadline={card.deadline}\n                          owner={card.owner}\n                          boardId={column.owner}\n                          card={card}\n                          columns={columns}\n                        />\n                      );\n                    })}\n                  </GalleryCards>\n                  <ButtonPlus\n                    type=\"submit\"\n                    approve={false}\n                    // onClose={() => openModalCard(column._id)}\n                    text=\"Add card\"\n                  />\n                </Column>\n              </ColumnsListItem>\n            );\n          })}\n        </ColumnsList>\n      )}\n      <ButtonPlus\n        type=\"submit\"\n        approve={false}\n        // onClose={openModalColumn}\n        text=\"Add Column\"\n      />\n\n      {/* <AddColumModal onClose={closeModalColumn} /> */}\n    </Container>\n  );\n};\n\nexport default MainDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}