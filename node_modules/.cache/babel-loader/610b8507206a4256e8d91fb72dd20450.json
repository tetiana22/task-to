{"ast":null,"code":"import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nconst {\n  addColumn,\n  editColumn,\n  createBoard,\n  editBoard,\n  getAllDashboards,\n  deleteDashboard,\n  getDashboardById\n} = require('./cardsReducers');\nconst initialState = {\n  boards: [],\n  currentBoardId: null,\n  isLoading: false,\n  error: null,\n  columnsLength: 0,\n  currentBg: '',\n  currentName: '',\n  selectedPriority: 'show all'\n};\nconst boardsSlice = createSlice({\n  name: 'dashboards',\n  initialState,\n  extraReducers: builder => builder.addCase(getAllDashboards.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.boards = action.payload;\n    state.error = null;\n  }).addCase(createBoard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.isLoggedIn = true;\n    state.currentBoardId = payload._id;\n    state.boards.push(...action.payload);\n  }).addCase(deleteDashboard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    const index = state.dashboards.findIndex(item => item._id === action.payload.deletedBoard._id);\n    state.dashboards.splice(index, 1);\n  }).addCase(getDashboardById.fulfilled, (state, action) => {\n    var _action$payload, _action$payload$dashb, _action$payload2, _action$payload2$dash, _action$payload3, _action$payload3$colu;\n    state.isLoading = false;\n    state.currentDashboard = action.payload;\n    state.error = null;\n    state.currentBg = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : (_action$payload$dashb = _action$payload.dashboard) === null || _action$payload$dashb === void 0 ? void 0 : _action$payload$dashb.backgroundURL;\n    state.currentName = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : (_action$payload2$dash = _action$payload2.dashboard) === null || _action$payload2$dash === void 0 ? void 0 : _action$payload2$dash.name;\n    state.columnsLength = (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : (_action$payload3$colu = _action$payload3.columns) === null || _action$payload3$colu === void 0 ? void 0 : _action$payload3$colu.length;\n    state.selectedPriority = 'show all';\n  }).addCase(editBoard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    const {\n      _id,\n      name,\n      icon,\n      backgroundURL\n    } = action.payload;\n    const boardIndex = state.boards.findIndex(item => item._id === _id);\n    state.boards[boardIndex] = {\n      ...state.boards[boardIndex],\n      name,\n      icon,\n      backgroundURL\n    };\n    state.currentName = name;\n    state.currentBg = backgroundURL;\n  }).addCase(addColumn.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.isLoggedIn = true;\n    state.boards.columns.push(action.payload);\n  }).addCase(editColumn.fulfilled, (state, action) => {\n    const {\n      _id,\n      text\n    } = action.payload;\n    const columnIndex = state.boards.columns.findIndex(item => item._id === _id);\n    state.boards.columns[columnIndex].text = text;\n    state.isLoading = false;\n    state.error = null;\n  }).addMatcher(isAnyOf(addColumn.pending, editColumn.pending, createBoard.pending, editBoard.pending, getAllDashboards.pending, deleteDashboard.pending, getDashboardById.pending), state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addMatcher(isAnyOf(addColumn.rejected, editColumn.rejected, createBoard.rejected, editBoard.rejected, getAllDashboards.rejected, deleteDashboard.rejected, getDashboardById.rejected), (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n  })\n});\nexport const boardsReducer = boardsSlice.reducer;","map":{"version":3,"names":["createSlice","isAnyOf","addColumn","editColumn","createBoard","editBoard","getAllDashboards","deleteDashboard","getDashboardById","require","initialState","boards","currentBoardId","isLoading","error","columnsLength","currentBg","currentName","selectedPriority","boardsSlice","name","extraReducers","builder","addCase","fulfilled","state","action","payload","isLoggedIn","_id","push","index","dashboards","findIndex","item","deletedBoard","splice","_action$payload","_action$payload$dashb","_action$payload2","_action$payload2$dash","_action$payload3","_action$payload3$colu","currentDashboard","dashboard","backgroundURL","columns","length","icon","boardIndex","text","columnIndex","addMatcher","pending","rejected","boardsReducer","reducer"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/redux/cards/cardsSlice.jsx"],"sourcesContent":["import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nconst {\n  addColumn,\n  editColumn,\n  createBoard,\n  editBoard,\n  getAllDashboards,\n  deleteDashboard,\n  getDashboardById,\n} = require('./cardsReducers');\n\nconst initialState = {\n  boards: [],\n  currentBoardId: null,\n  isLoading: false,\n  error: null,\n  columnsLength: 0,\n  currentBg: '',\n  currentName: '',\n  selectedPriority: 'show all',\n};\n\nconst boardsSlice = createSlice({\n  name: 'dashboards',\n  initialState,\n  extraReducers: builder =>\n    builder\n      .addCase(getAllDashboards.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.boards = action.payload;\n        state.error = null;\n      })\n      .addCase(createBoard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isLoggedIn = true;\n        state.currentBoardId = payload._id;\n        state.boards.push(...action.payload);\n      })\n      .addCase(deleteDashboard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        const index = state.dashboards.findIndex(\n          item => item._id === action.payload.deletedBoard._id\n        );\n\n        state.dashboards.splice(index, 1);\n      })\n      .addCase(getDashboardById.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.currentDashboard = action.payload;\n        state.error = null;\n\n        state.currentBg = action.payload?.dashboard?.backgroundURL;\n        state.currentName = action.payload?.dashboard?.name;\n        state.columnsLength = action.payload?.columns?.length;\n        state.selectedPriority = 'show all';\n      })\n      .addCase(editBoard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        const { _id, name, icon, backgroundURL } = action.payload;\n\n        const boardIndex = state.boards.findIndex(item => item._id === _id);\n\n        state.boards[boardIndex] = {\n          ...state.boards[boardIndex],\n          name,\n          icon,\n          backgroundURL,\n        };\n        state.currentName = name;\n        state.currentBg = backgroundURL;\n      })\n\n      .addCase(addColumn.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isLoggedIn = true;\n        state.boards.columns.push(action.payload);\n      })\n      .addCase(editColumn.fulfilled, (state, action) => {\n        const { _id, text } = action.payload;\n        const columnIndex = state.boards.columns.findIndex(\n          item => item._id === _id\n        );\n        state.boards.columns[columnIndex].text = text;\n        state.isLoading = false;\n        state.error = null;\n      })\n      .addMatcher(\n        isAnyOf(\n          addColumn.pending,\n          editColumn.pending,\n          createBoard.pending,\n          editBoard.pending,\n          getAllDashboards.pending,\n          deleteDashboard.pending,\n          getDashboardById.pending\n        ),\n        state => {\n          state.isLoading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          addColumn.rejected,\n          editColumn.rejected,\n          createBoard.rejected,\n          editBoard.rejected,\n          getAllDashboards.rejected,\n          deleteDashboard.rejected,\n          getDashboardById.rejected\n        ),\n        (state, action) => {\n          state.isLoading = false;\n          state.error = action.payload;\n        }\n      ),\n});\nexport const boardsReducer = boardsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}