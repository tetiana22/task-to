{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Sidebar/BordItem/BordItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentBoardId, closeSidebar } from '../../../redux/boards/boardActions'; // Assuming these are action creators\nimport { clearColumns } from '../../../redux/columns/columnActions'; // Assuming this is an action creator\nimport { useNavigate } from 'react-router-dom';\nimport { css } from './BordItem.styled'; // Assuming this is a CSS module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardItem = _ref => {\n  _s();\n  let {\n    board\n  } = _ref;\n  const dispatch = useDispatch();\n  const currBoardId = useSelector(state => state.boards.currentBoardId);\n  const [open, setOpen] = useState(false);\n  const navigate = useNavigate();\n  const handleNavigate = e => {\n    if (e.target.dataset.icon) {\n      return; // If the click is on an icon, return early\n    }\n\n    navigate(`/home/${board._id}`);\n    dispatch(setCurrentBoardId(board._id));\n    dispatch(closeSidebar());\n    if (board._id !== currBoardId) {\n      dispatch(clearColumns());\n    }\n  };\n  const handleEditBoard = () => {\n    // Define the function or remove if not used\n  };\n  const handleWarningBoard = () => {\n    // Define the function or remove if not used\n  };\n  const checkTextLength = text => {\n    // Implement your logic for checking text length\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    id: \"boardBtn\",\n    onClick: handleNavigate,\n    className: board._id === currBoardId ? css.active : '',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: board.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.boardButtonBox,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-icon\": \"icon\",\n        onClick: handleEditBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleWarningBoard,\n        \"data-icon\": \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardItem, \"QzVzrdpBp6/LtwmYs2FpARtUdbg=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = BoardItem;\nexport default BoardItem;\nvar _c;\n$RefreshReg$(_c, \"BoardItem\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setCurrentBoardId","closeSidebar","clearColumns","useNavigate","css","jsxDEV","_jsxDEV","BoardItem","_ref","_s","board","dispatch","currBoardId","state","boards","currentBoardId","open","setOpen","navigate","handleNavigate","e","target","dataset","icon","_id","handleEditBoard","handleWarningBoard","checkTextLength","text","id","onClick","className","active","children","name","fileName","_jsxFileName","lineNumber","columnNumber","boardButtonBox","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Sidebar/BordItem/BordItem.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setCurrentBoardId,\n  closeSidebar,\n} from '../../../redux/boards/boardActions'; // Assuming these are action creators\nimport { clearColumns } from '../../../redux/columns/columnActions'; // Assuming this is an action creator\nimport { useNavigate } from 'react-router-dom';\nimport { css } from './BordItem.styled'; // Assuming this is a CSS module\n\nconst BoardItem = ({ board }) => {\n  const dispatch = useDispatch();\n  const currBoardId = useSelector(state => state.boards.currentBoardId);\n  const [open, setOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleNavigate = e => {\n    if (e.target.dataset.icon) {\n      return; // If the click is on an icon, return early\n    }\n    navigate(`/home/${board._id}`);\n    dispatch(setCurrentBoardId(board._id));\n    dispatch(closeSidebar());\n    if (board._id !== currBoardId) {\n      dispatch(clearColumns());\n    }\n  };\n\n  const handleEditBoard = () => {\n    // Define the function or remove if not used\n  };\n\n  const handleWarningBoard = () => {\n    // Define the function or remove if not used\n  };\n\n  const checkTextLength = text => {\n    // Implement your logic for checking text length\n  };\n\n  return (\n    <li\n      id=\"boardBtn\"\n      onClick={handleNavigate}\n      className={board._id === currBoardId ? css.active : ''}\n    >\n      <div>\n        {/* Uncomment and adjust SVG code if necessary */}\n        {/* <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n          <use href={`${sprite}#icon-${board.icon}`} />\n        </svg> */}\n        <p>{board.name}</p>\n      </div>\n      <div className={css.boardButtonBox}>\n        <button data-icon=\"icon\" onClick={handleEditBoard}>\n          {/* Uncomment and adjust SVG code if necessary */}\n          {/* <svg\n            data-icon=\"icon\"\n            className={css.iconButton}\n            width=\"16\"\n            height=\"16\"\n          >\n            <use data-icon=\"icon\" href={`${sprite}#icon-pencil`} />\n          </svg> */}\n        </button>\n        <button onClick={handleWarningBoard} data-icon=\"icon\">\n          {/* Uncomment and adjust SVG code if necessary */}\n          {/* <svg\n            data-icon=\"icon\"\n            className={css.iconButton}\n            width=\"16\"\n            height=\"16\"\n          >\n            <use data-icon=\"icon\" href={`${sprite}#icon-trash`} />\n          </svg> */}\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default BoardItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,iBAAiB,EACjBC,YAAY,QACP,oCAAoC,CAAC,CAAC;AAC7C,SAASC,YAAY,QAAQ,sCAAsC,CAAC,CAAC;AACrE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,QAAQ,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC1B,MAAMG,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,WAAW,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACC,cAAc,CAAC;EACrE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMqB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,cAAc,GAAGC,CAAC,IAAI;IAC1B,IAAIA,CAAC,CAACC,MAAM,CAACC,OAAO,CAACC,IAAI,EAAE;MACzB,OAAO,CAAC;IACV;;IACAL,QAAQ,CAAE,SAAQR,KAAK,CAACc,GAAI,EAAC,CAAC;IAC9Bb,QAAQ,CAACX,iBAAiB,CAACU,KAAK,CAACc,GAAG,CAAC,CAAC;IACtCb,QAAQ,CAACV,YAAY,CAAC,CAAC,CAAC;IACxB,IAAIS,KAAK,CAACc,GAAG,KAAKZ,WAAW,EAAE;MAC7BD,QAAQ,CAACT,YAAY,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMuB,eAAe,GAAGA,CAAA,KAAM;IAC5B;EAAA,CACD;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;EAAA,CACD;EAED,MAAMC,eAAe,GAAGC,IAAI,IAAI;IAC9B;EAAA,CACD;EAED,oBACEtB,OAAA;IACEuB,EAAE,EAAC,UAAU;IACbC,OAAO,EAAEX,cAAe;IACxBY,SAAS,EAAErB,KAAK,CAACc,GAAG,KAAKZ,WAAW,GAAGR,GAAG,CAAC4B,MAAM,GAAG,EAAG;IAAAC,QAAA,gBAEvD3B,OAAA;MAAA2B,QAAA,eAKE3B,OAAA;QAAA2B,QAAA,EAAIvB,KAAK,CAACwB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACNhC,OAAA;MAAKyB,SAAS,EAAE3B,GAAG,CAACmC,cAAe;MAAAN,QAAA,gBACjC3B,OAAA;QAAQ,aAAU,MAAM;QAACwB,OAAO,EAAEL;MAAgB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAU1C,CAAC,eACThC,OAAA;QAAQwB,OAAO,EAAEJ,kBAAmB;QAAC,aAAU;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAU7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET,CAAC;AAAC7B,EAAA,CArEIF,SAAS;EAAA,QACIT,WAAW,EACRC,WAAW,EAEdI,WAAW;AAAA;AAAAqC,EAAA,GAJxBjC,SAAS;AAuEf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}