{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/NeedHelp/NeedHelp.jsx\",\n  _s = $RefreshSig$();\nimport { needHelpSchema } from 'components/validation/schema';\nimport { Form, Button, Wrap, Input, Error } from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NeedHelp = () => {\n  _s();\n  var _errors$email;\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      touched = {}\n    }\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      email: '',\n      message: ''\n    },\n    resolver: yupResolver(needHelpSchema)\n  });\n  const onSubmit = (values, _ref) => {\n    let {\n      resetForm\n    } = _ref;\n    const {\n      email,\n      message\n    } = values;\n    const messageTrim = message.trim();\n    if (!messageTrim) {\n      toast.error('Sorry, but you need to describe your problem!');\n      return;\n    }\n    const formData = {\n      email,\n      message\n    };\n    dispatch(needHelp(formData));\n    resetForm();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"email\",\n      id: \"email\",\n      placeholder: \"Email address\",\n      ...register('email'),\n      error: touched.email && ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        type: \"text\",\n        id: \"message\",\n        placeholder: \"Comment\",\n        ...register('comment'),\n        error: touched.comment && errors.comment.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), errors.comment && /*#__PURE__*/_jsxDEV(Error, {\n        children: errors.comment.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(NeedHelp, \"hGN3ZwCsKgYYfU+6zBHgSrCnR9A=\", false, function () {\n  return [useDispatch, useForm];\n});\n_c = NeedHelp;\nexport default NeedHelp;\nvar _c;\n$RefreshReg$(_c, \"NeedHelp\");","map":{"version":3,"names":["needHelpSchema","Form","Button","Wrap","Input","Error","toast","useDispatch","useForm","jsxDEV","_jsxDEV","NeedHelp","_s","_errors$email","dispatch","register","handleSubmit","formState","errors","touched","mode","defaultValues","email","message","resolver","yupResolver","onSubmit","values","_ref","resetForm","messageTrim","trim","error","formData","needHelp","children","type","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Text","comment","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/NeedHelp/NeedHelp.jsx"],"sourcesContent":["import { needHelpSchema } from 'components/validation/schema';\nimport {\n  Form,\n  Button,\n  Wrap,\n  Input,\n  Error,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nconst NeedHelp = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      email: '',\n      message: '',\n    },\n    resolver: yupResolver(needHelpSchema),\n  });\n  const onSubmit = (values, { resetForm }) => {\n    const { email, message } = values;\n    const messageTrim = message.trim();\n\n    if (!messageTrim) {\n      toast.error('Sorry, but you need to describe your problem!');\n      return;\n    }\n    const formData = { email, message };\n\n    dispatch(needHelp(formData));\n    resetForm();\n  };\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"email\"\n        id=\"email\"\n        placeholder=\"Email address\"\n        {...register('email')}\n        error={touched.email && errors.email?.message}\n      />\n      {errors.email && <Error>{errors.email.message}</Error>}\n\n      <Wrap>\n        <Text\n          type=\"text\"\n          id=\"message\"\n          placeholder=\"Comment\"\n          {...register('comment')}\n          error={touched.comment && errors.comment.message}\n        />\n        {errors.comment && <Error>{errors.comment.message}</Error>}\n      </Wrap>\n\n      <Button type=\"submit\">Send</Button>\n    </Form>\n  );\n};\nexport default NeedHelp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}