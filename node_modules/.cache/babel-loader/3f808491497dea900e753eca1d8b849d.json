{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Sidebar/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { openMenuMode } from '../../redux/menu/menuSlice'; // Додайте імпорт openMenuMode\n\n// Інші імпорти...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = _ref => {\n  _s();\n  let {\n    isOpen\n  } = _ref;\n  const dispatch = useDispatch();\n  const activeUserTheme = useSelector(selectTheme);\n  const menuMode = useSelector(selectIsMenuOpen);\n  const [open, setOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleOpen = () => {\n    setIsModalOpen(true);\n  };\n  const handleClose = () => {\n    setIsModalOpen(false);\n  };\n  const setIconLogo = () => {\n    if (activeUserTheme === 'dark' || activeUserTheme === 'light') {\n      return '#icon-logo';\n    } else if (activeUserTheme === 'violet') {\n      return '#icon-logo-violet';\n    }\n  };\n  const openMenu = () => {\n    dispatch(openMenuMode()); // Викликаємо openMenuMode для відкриття меню\n  };\n\n  return /*#__PURE__*/_jsxDEV(Aside, {\n    isOpen: menuMode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"zbncmhb4En+qzSm9BQIN+1DlM8g=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","openMenuMode","jsxDEV","_jsxDEV","Sidebar","_ref","_s","isOpen","dispatch","activeUserTheme","selectTheme","menuMode","selectIsMenuOpen","open","setOpen","isModalOpen","setIsModalOpen","handleOpen","handleClose","setIconLogo","openMenu","Aside","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Sidebar/Sidebar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { openMenuMode } from '../../redux/menu/menuSlice'; // Додайте імпорт openMenuMode\n\n// Інші імпорти...\n\nconst Sidebar = ({ isOpen }) => {\n  const dispatch = useDispatch();\n  const activeUserTheme = useSelector(selectTheme);\n  const menuMode = useSelector(selectIsMenuOpen);\n  const [open, setOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const setIconLogo = () => {\n    if (activeUserTheme === 'dark' || activeUserTheme === 'light') {\n      return '#icon-logo';\n    } else if (activeUserTheme === 'violet') {\n      return '#icon-logo-violet';\n    }\n  };\n\n  const openMenu = () => {\n    dispatch(openMenuMode()); // Викликаємо openMenuMode для відкриття меню\n  };\n\n  return (\n    <Aside isOpen={menuMode}>\n      <div style={{ width: '100%' }}>{/* Ваш код */}</div>\n\n      <div style={{ width: '100%' }}>{/* Ваш код */}</div>\n    </Aside>\n  );\n};\n\nexport default Sidebar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,4BAA4B,CAAC,CAAC;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACzB,MAAMG,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,eAAe,GAAGV,WAAW,CAACW,WAAW,CAAC;EAChD,MAAMC,QAAQ,GAAGZ,WAAW,CAACa,gBAAgB,CAAC;EAC9C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMmB,UAAU,GAAGA,CAAA,KAAM;IACvBD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBF,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIV,eAAe,KAAK,MAAM,IAAIA,eAAe,KAAK,OAAO,EAAE;MAC7D,OAAO,YAAY;IACrB,CAAC,MAAM,IAAIA,eAAe,KAAK,QAAQ,EAAE;MACvC,OAAO,mBAAmB;IAC5B;EACF,CAAC;EAED,MAAMW,QAAQ,GAAGA,CAAA,KAAM;IACrBZ,QAAQ,CAACP,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED,oBACEE,OAAA,CAACkB,KAAK;IAACd,MAAM,EAAEI,QAAS;IAAAW,QAAA,gBACtBnB,OAAA;MAAKoB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC,eAEpDzB,OAAA;MAAKoB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEZ,CAAC;AAACtB,EAAA,CAlCIF,OAAO;EAAA,QACMJ,WAAW,EACJD,WAAW,EAClBA,WAAW;AAAA;AAAA8B,EAAA,GAHxBzB,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}