{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/AddColumn/AddColumn.jsx\",\n  _s = $RefreshSig$();\nimport ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport { Input, Error, Form } from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn } from '../../redux/cards/cardsReducers';\nimport { selectColumns } from '../../redux/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddColumn = _ref => {\n  _s();\n  let {\n    text,\n    boardId\n  } = _ref;\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      touched = {}\n    }\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: '',\n      boardId: ''\n    },\n    resolver: yupResolver(editColumnSchema)\n  });\n  const onSubmit = () => {\n    const alreadyExistsIndex = columns.findIndex(item => {\n      const name = item.text.toLowerCase();\n      const newName = text.toLowerCase();\n      return name === newName;\n    });\n    if (alreadyExistsIndex >= 0) {\n      const alreadyExistsColumn = columns[alreadyExistsIndex];\n      return `${alreadyExistsColumn.name} is already added to contact list`;\n    } else {\n      dispatch(addColumn({\n        boardId,\n        text\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      id: \"text\",\n      placeholder: \"To do\",\n      ...register('text'),\n      error: touched.text && errors.text && errors.text.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), errors.text && /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.text.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPlus, {\n      type: \"submit\",\n      approve: \"true\",\n      text: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AddColumn, \"FhDYisz8F+UGwMi3r+3pWiWtsU0=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n_c = AddColumn;\nexport default AddColumn;\nvar _c;\n$RefreshReg$(_c, \"AddColumn\");","map":{"version":3,"names":["ButtonPlus","editColumnSchema","Input","Error","Form","useForm","yupResolver","useDispatch","useSelector","addColumn","selectColumns","jsxDEV","_jsxDEV","AddColumn","_ref","_s","text","boardId","dispatch","columns","register","handleSubmit","formState","errors","touched","mode","defaultValues","resolver","onSubmit","alreadyExistsIndex","findIndex","item","name","toLowerCase","newName","alreadyExistsColumn","children","type","id","placeholder","error","message","fileName","_jsxFileName","lineNumber","columnNumber","approve","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/AddColumn/AddColumn.jsx"],"sourcesContent":["import ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport {\n  Input,\n  Error,\n  Form,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn } from '../../redux/cards/cardsReducers';\nimport { selectColumns } from '../../redux/selectors';\n\nconst AddColumn = ({ text, boardId }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: '',\n      boardId: '',\n    },\n    resolver: yupResolver(editColumnSchema),\n  });\n\n  const onSubmit = () => {\n    const alreadyExistsIndex = columns.findIndex(item => {\n      const name = item.text.toLowerCase();\n      const newName = text.toLowerCase();\n      return name === newName;\n    });\n\n    if (alreadyExistsIndex >= 0) {\n      const alreadyExistsColumn = columns[alreadyExistsIndex];\n      return `${alreadyExistsColumn.name} is already added to contact list`;\n    } else {\n      dispatch(addColumn({ boardId, text }));\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"text\"\n        id=\"text\"\n        placeholder=\"To do\"\n        {...register('text')}\n        error={touched.text && errors.text && errors.text.message}\n      />\n      {errors.text && <Error>{errors.text.message}</Error>}\n\n      <ButtonPlus type=\"submit\" approve=\"true\" text=\"Add\" />\n    </Form>\n  );\n};\n\nexport default AddColumn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}