{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Home/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useTheme } from '@mui/material';\nimport Header from '../Header/Header';\nimport { HomePageContainer, MainContainer } from './Home.styled';\nimport { ThemeProvider } from 'styled-components';\nimport { selectTheme } from '../../redux/selectors';\nimport Board from 'components/Home/Board/Board';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDashboardById, getAllDashboards } from '../../redux/cards/cardsReducers';\nimport MainBoard from './MainBoard/MainBoard';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const theme = useTheme();\n  const activeUserTheme = useSelector(selectTheme);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const selectThemeIndex = () => {\n    if (activeUserTheme === 'dark') {\n      return 0;\n    } else if (activeUserTheme === 'light') {\n      return 1;\n    } else if (activeUserTheme === 'violet') {\n      return 2;\n    }\n  };\n  useEffect(() => {\n    dispatch(getAllDashboards()).then(data => {\n      if (data.payload.length === 0) {\n        return;\n      }\n      dispatch(getDashboardById(data.payload[0]._id));\n      navigate(`/home/${data.payload[0].name}`);\n    });\n  }, [dispatch, navigate]);\n\n  // Define variables to hold boardName and data\n  const boardName = useSelector(state => {\n    var _state$dashboard;\n    return state === null || state === void 0 ? void 0 : (_state$dashboard = state.dashboard) === null || _state$dashboard === void 0 ? void 0 : _state$dashboard.name;\n  });\n  const data = useSelector(state => state === null || state === void 0 ? void 0 : state.dashboard);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[selectThemeIndex()],\n    children: /*#__PURE__*/_jsxDEV(HomePageContainer, {\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: [boardName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(HeaderDashboard, {\n            boardName: boardName,\n            filterValue: data.filter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MainBoard, {\n            board: data,\n            columns: data.columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"QSSdk/XlM2KgRzaAqOlVywwz1TI=\", false, function () {\n  return [useTheme, useSelector, useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useTheme","Header","HomePageContainer","MainContainer","ThemeProvider","selectTheme","Board","useNavigate","useDispatch","useSelector","getDashboardById","getAllDashboards","MainBoard","HeaderDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","theme","activeUserTheme","dispatch","navigate","selectThemeIndex","then","data","payload","length","_id","name","boardName","state","_state$dashboard","dashboard","children","filterValue","filter","fileName","_jsxFileName","lineNumber","columnNumber","board","columns","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Home/Home.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useTheme } from '@mui/material';\nimport Header from '../Header/Header';\nimport { HomePageContainer, MainContainer } from './Home.styled';\nimport { ThemeProvider } from 'styled-components';\nimport { selectTheme } from '../../redux/selectors';\nimport Board from 'components/Home/Board/Board';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getDashboardById,\n  getAllDashboards,\n} from '../../redux/cards/cardsReducers';\nimport MainBoard from './MainBoard/MainBoard';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\n\nconst HomePage = () => {\n  const theme = useTheme();\n  const activeUserTheme = useSelector(selectTheme);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const selectThemeIndex = () => {\n    if (activeUserTheme === 'dark') {\n      return 0;\n    } else if (activeUserTheme === 'light') {\n      return 1;\n    } else if (activeUserTheme === 'violet') {\n      return 2;\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getAllDashboards()).then(data => {\n      if (data.payload.length === 0) {\n        return;\n      }\n      dispatch(getDashboardById(data.payload[0]._id));\n      navigate(`/home/${data.payload[0].name}`);\n    });\n  }, [dispatch, navigate]);\n\n  // Define variables to hold boardName and data\n  const boardName = useSelector(state => state?.dashboard?.name);\n  const data = useSelector(state => state?.dashboard);\n\n  return (\n    <ThemeProvider theme={theme[selectThemeIndex()]}>\n      <HomePageContainer>\n        <MainContainer>\n          {boardName ? (\n            <>\n              <HeaderDashboard\n                boardName={boardName}\n                filterValue={data.filter}\n              />\n              <MainBoard board={data} columns={data.columns} />\n            </>\n          ) : (\n            <Board />\n          )}\n          <Header />\n          <Board />\n        </MainContainer>\n      </HomePageContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}