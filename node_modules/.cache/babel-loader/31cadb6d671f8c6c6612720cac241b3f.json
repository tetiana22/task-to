{"ast":null,"code":"import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nconst {\n  addColumn,\n  editColumn,\n  createBoard,\n  editBoard,\n  getAllDashboards,\n  deleteDashboard,\n  getDashboardById\n} = require('./cardsReducers');\nconst initialState = {\n  boards: [],\n  columns: [],\n  columnId: null,\n  currentBoardId: null,\n  cards: [],\n  cardId: null,\n  isLoading: false,\n  error: null,\n  columnsLength: 0,\n  currentBg: '',\n  currentName: '',\n  selectedPriority: 'show all'\n};\nconst boardsSlice = createSlice({\n  name: 'dashboards',\n  initialState,\n  extraReducers: builder => builder.addCase(getAllDashboards.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.boards = action.payload;\n    state.error = null;\n  }).addCase(createBoard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.isLoggedIn = true;\n    state.currentBoardId = action.payload._id;\n    state.boards = [...state.boards, action.payload];\n    // state.boards.push(action.payload);\n  }).addCase(deleteDashboard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    const index = state.dashboards.findIndex(item => item._id === action.payload.deletedBoard._id);\n    state.dashboards.splice(index, 1);\n  }).addCase(getDashboardById.fulfilled, (state, action) => {\n    var _action$payload, _action$payload$dashb, _action$payload2, _action$payload2$dash, _action$payload3, _action$payload3$colu;\n    state.isLoading = false;\n    state.currentBoardId = action.payload;\n    state.error = null;\n    state.currentBg = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : (_action$payload$dashb = _action$payload.dashboard) === null || _action$payload$dashb === void 0 ? void 0 : _action$payload$dashb.backgroundURL;\n    state.currentName = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : (_action$payload2$dash = _action$payload2.dashboard) === null || _action$payload2$dash === void 0 ? void 0 : _action$payload2$dash.name;\n    state.columnsLength = (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : (_action$payload3$colu = _action$payload3.columns) === null || _action$payload3$colu === void 0 ? void 0 : _action$payload3$colu.length;\n    state.selectedPriority = 'show all';\n  }).addCase(editBoard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    const {\n      _id,\n      name,\n      icon,\n      backgroundURL\n    } = action.payload;\n    const boardIndex = state.boards.findIndex(item => item._id === _id);\n    state.boards[boardIndex] = {\n      ...state.boards[boardIndex],\n      name,\n      icon,\n      backgroundURL\n    };\n    state.currentName = name;\n    state.currentBg = backgroundURL;\n  }).addCase(addColumn.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.isLoggedIn = true;\n    state.columns.push(action.payload);\n  }).addCase(editColumn.fulfilled, (state, action) => {\n    const {\n      _id,\n      text\n    } = action.payload;\n    const columnIndex = state.columns.findIndex(item => item._id === _id);\n    state.columns[columnIndex].text = text;\n    state.isLoading = false;\n    state.error = null;\n  }).addMatcher(isAnyOf(addColumn.pending, editColumn.pending, createBoard.pending, editBoard.pending, getAllDashboards.pending, deleteDashboard.pending, getDashboardById.pending), state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addMatcher(isAnyOf(addColumn.rejected, editColumn.rejected, createBoard.rejected, editBoard.rejected, getAllDashboards.rejected, deleteDashboard.rejected, getDashboardById.rejected), (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n  })\n});\nexport const boardsReducer = boardsSlice.reducer;","map":{"version":3,"names":["createSlice","isAnyOf","addColumn","editColumn","createBoard","editBoard","getAllDashboards","deleteDashboard","getDashboardById","require","initialState","boards","columns","columnId","currentBoardId","cards","cardId","isLoading","error","columnsLength","currentBg","currentName","selectedPriority","boardsSlice","name","extraReducers","builder","addCase","fulfilled","state","action","payload","isLoggedIn","_id","index","dashboards","findIndex","item","deletedBoard","splice","_action$payload","_action$payload$dashb","_action$payload2","_action$payload2$dash","_action$payload3","_action$payload3$colu","dashboard","backgroundURL","length","icon","boardIndex","push","text","columnIndex","addMatcher","pending","rejected","boardsReducer","reducer"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/redux/cards/cardsSlice.jsx"],"sourcesContent":["import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nconst {\n  addColumn,\n  editColumn,\n  createBoard,\n  editBoard,\n  getAllDashboards,\n  deleteDashboard,\n  getDashboardById,\n} = require('./cardsReducers');\n\nconst initialState = {\n  boards: [],\n  columns: [],\n  columnId: null,\n  currentBoardId: null,\n  cards: [],\n  cardId: null,\n  isLoading: false,\n  error: null,\n  columnsLength: 0,\n  currentBg: '',\n  currentName: '',\n  selectedPriority: 'show all',\n};\n\nconst boardsSlice = createSlice({\n  name: 'dashboards',\n  initialState,\n  extraReducers: builder =>\n    builder\n      .addCase(getAllDashboards.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.boards = action.payload;\n        state.error = null;\n      })\n      .addCase(createBoard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isLoggedIn = true;\n        state.currentBoardId = action.payload._id;\n        state.boards = [...state.boards, action.payload];\n        // state.boards.push(action.payload);\n      })\n      .addCase(deleteDashboard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        const index = state.dashboards.findIndex(\n          item => item._id === action.payload.deletedBoard._id\n        );\n\n        state.dashboards.splice(index, 1);\n      })\n      .addCase(getDashboardById.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.currentBoardId = action.payload;\n        state.error = null;\n\n        state.currentBg = action.payload?.dashboard?.backgroundURL;\n        state.currentName = action.payload?.dashboard?.name;\n        state.columnsLength = action.payload?.columns?.length;\n        state.selectedPriority = 'show all';\n      })\n      .addCase(editBoard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        const { _id, name, icon, backgroundURL } = action.payload;\n\n        const boardIndex = state.boards.findIndex(item => item._id === _id);\n\n        state.boards[boardIndex] = {\n          ...state.boards[boardIndex],\n          name,\n          icon,\n          backgroundURL,\n        };\n        state.currentName = name;\n        state.currentBg = backgroundURL;\n      })\n\n      .addCase(addColumn.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isLoggedIn = true;\n        state.columns.push(action.payload);\n      })\n      .addCase(editColumn.fulfilled, (state, action) => {\n        const { _id, text } = action.payload;\n        const columnIndex = state.columns.findIndex(item => item._id === _id);\n        state.columns[columnIndex].text = text;\n        state.isLoading = false;\n        state.error = null;\n      })\n      .addMatcher(\n        isAnyOf(\n          addColumn.pending,\n          editColumn.pending,\n          createBoard.pending,\n          editBoard.pending,\n          getAllDashboards.pending,\n          deleteDashboard.pending,\n          getDashboardById.pending\n        ),\n        state => {\n          state.isLoading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          addColumn.rejected,\n          editColumn.rejected,\n          createBoard.rejected,\n          editBoard.rejected,\n          getAllDashboards.rejected,\n          deleteDashboard.rejected,\n          getDashboardById.rejected\n        ),\n        (state, action) => {\n          state.isLoading = false;\n          state.error = action.payload;\n        }\n      ),\n});\nexport const boardsReducer = boardsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}