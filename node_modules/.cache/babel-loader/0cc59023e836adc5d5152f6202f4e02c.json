{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { authInstance } from 'redux/authorization/authReducer';\nexport const addColumn = createAsyncThunk('addColumn', async (_ref, thunkAPI) => {\n  let {\n    bordsId,\n    text,\n    owner\n  } = _ref;\n  try {\n    const {\n      data\n    } = await authInstance.post(`api/column/${bordsId}`, {\n      text,\n      owner\n    });\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const deleteColumn = createAsyncThunk('deleteColumn', async (columnId, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await authInstance.delete(`api/column/${columnId}`);\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const editColumn = createAsyncThunk('editColumn', async (_ref2, thunkAPI) => {\n  let {\n    columnId,\n    text\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await authInstance.put(`api/column/${columnId}`, {\n      text\n    });\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","authInstance","addColumn","_ref","thunkAPI","bordsId","text","owner","data","post","error","rejectWithValue","message","deleteColumn","columnId","delete","editColumn","_ref2","put"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/redux/cards/cardsReducers.jsx"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { authInstance } from 'redux/authorization/authReducer';\n\nexport const addColumn = createAsyncThunk(\n  'addColumn',\n  async ({ bordsId, text, owner }, thunkAPI) => {\n    try {\n      const { data } = await authInstance.post(`api/column/${bordsId}`, {\n        text,\n        owner,\n      });\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\nexport const deleteColumn = createAsyncThunk(\n  'deleteColumn',\n  async (columnId, thunkAPI) => {\n    try {\n      const { data } = await authInstance.delete(`api/column/${columnId}`);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\nexport const editColumn = createAsyncThunk(\n  'editColumn',\n  async ({ columnId, text }, thunkAPI) => {\n    try {\n      const { data } = await authInstance.put(`api/column/${columnId}`, {\n        text,\n      });\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,YAAY,QAAQ,iCAAiC;AAE9D,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CACvC,WAAW,EACX,OAAAG,IAAA,EAAiCC,QAAQ,KAAK;EAAA,IAAvC;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EAC7B,IAAI;IACF,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMP,YAAY,CAACQ,IAAI,CAAE,cAAaJ,OAAQ,EAAC,EAAE;MAChEC,IAAI;MACJC;IACF,CAAC,CAAC;IACF,OAAOC,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAON,QAAQ,CAACO,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC;AACD,OAAO,MAAMC,YAAY,GAAGb,gBAAgB,CAC1C,cAAc,EACd,OAAOc,QAAQ,EAAEV,QAAQ,KAAK;EAC5B,IAAI;IACF,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMP,YAAY,CAACc,MAAM,CAAE,cAAaD,QAAS,EAAC,CAAC;IACpE,OAAON,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAON,QAAQ,CAACO,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC;AACD,OAAO,MAAMI,UAAU,GAAGhB,gBAAgB,CACxC,YAAY,EACZ,OAAAiB,KAAA,EAA2Bb,QAAQ,KAAK;EAAA,IAAjC;IAAEU,QAAQ;IAAER;EAAK,CAAC,GAAAW,KAAA;EACvB,IAAI;IACF,MAAM;MAAET;IAAK,CAAC,GAAG,MAAMP,YAAY,CAACiB,GAAG,CAAE,cAAaJ,QAAS,EAAC,EAAE;MAChER;IACF,CAAC,CAAC;IACF,OAAOE,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAON,QAAQ,CAACO,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module"}