{"ast":null,"code":"var _jsxFileName = \"/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Sidebar/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Додайте імпорт useState\nimport { useSelector, useDispatch } from 'react-redux'; // Додайте імпорт useSelector та useDispatch\nimport { closeMenuMode } from '../../redux/menu/menuSlice';\n// import { selectTheme } from '../../redux/selectors';\nimport { selectIsMenuOpen } from '../../redux/menu/selectors';\nimport BoardList from './BorderList/BorderList';\n// import NeedHelpBlock from 'components/Sidebar/NeedHelpBlock/NeedHelpBlock';\nimport AddBoardModal from '../Modals/AddBoardModal/AddBoardModal';\nimport sprite from '../../assets/fonts/images/icons/icons-sprite.svg';\nimport { Aside, Logo, IconLogo, LogoText, MyBoardsText, AddBoardBlock, CreateNewBoard, BtnAdd, IconPlus, BtnLogOut, IconLogOut, TextLogOut, Backdrop, Delete, IconLink, Edit, BoardsList, BoardItem, BoardLink, TitleBox, IconsBox, Title } from './Sidebar.styled';\nimport { logoutUser } from '../../redux/authorization/authReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const dispatch = useDispatch();\n  const boards = useSelector(state => state.dashboards.boards);\n  //   const activeUserTheme = useSelector(selectTheme);\n  const menuMode = useSelector(selectIsMenuOpen);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleOpen = () => {\n    setIsModalOpen(true);\n  };\n  const handleClose = () => {\n    setIsModalOpen(false);\n  };\n  const handleBackdropClick = () => {\n    dispatch(closeMenuMode()); // Закриваємо Sidebar при кліку на фон\n  };\n  //   const setIconLogo = () => {\n  //     if (activeUserTheme === 'dark' || activeUserTheme === 'light') {\n  //       return '#icon-logo';\n  //     } else if (activeUserTheme === 'violet') {\n  //       return '#icon-logo-violet';\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(Backdrop, {\n    isOpen: menuMode,\n    onClick: handleBackdropClick,\n    children: /*#__PURE__*/_jsxDEV(Aside, {\n      isOpen: menuMode,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          children: [/*#__PURE__*/_jsxDEV(IconLogo, {\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              href: sprite + '#icon-logo'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LogoText, {\n            children: \"Task Pro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyBoardsText, {\n          children: \"My boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddBoardBlock, {\n          children: [/*#__PURE__*/_jsxDEV(CreateNewBoard, {\n            onClick: handleOpen,\n            children: \"Create a new board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BtnAdd, {\n            type: \"button\",\n            onClick: handleOpen,\n            children: /*#__PURE__*/_jsxDEV(IconPlus, {\n              \"aria-label\": \"add icon\",\n              children: /*#__PURE__*/_jsxDEV(\"use\", {\n                href: sprite + `#icon-plus`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BoardsContainer, {\n        children: /*#__PURE__*/_jsxDEV(BoardsList, {\n          theme: theme,\n          children: data && data.map(board => {\n            const isSelected = `/home/${board._id}` === location.pathname;\n            return /*#__PURE__*/_jsxDEV(BoardItem, {\n              children: [/*#__PURE__*/_jsxDEV(BoardLink, {\n                to: `/home/${board._id}`,\n                state: {\n                  from: location\n                },\n                theme: theme,\n                children: /*#__PURE__*/_jsxDEV(TitleBox, {\n                  children: /*#__PURE__*/_jsxDEV(Title, {\n                    theme: theme,\n                    children: board.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), isSelected && /*#__PURE__*/_jsxDEV(IconsBox, {\n                theme: theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 23\n              }, this)]\n            }, board._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(BtnLogOut, {\n          type: \"button\",\n          onClick: () => dispatch(logoutUser()),\n          children: [/*#__PURE__*/_jsxDEV(IconLogOut, {\n            \"aria-label\": \"logout icon\",\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              href: sprite + `#icon-login`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextLogOut, {\n            children: \"Log out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(AddBoardModal, {\n        onClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"UmbG1LRE6wpwJEiXrFEk1HyxITM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","closeMenuMode","selectIsMenuOpen","BoardList","AddBoardModal","sprite","Aside","Logo","IconLogo","LogoText","MyBoardsText","AddBoardBlock","CreateNewBoard","BtnAdd","IconPlus","BtnLogOut","IconLogOut","TextLogOut","Backdrop","Delete","IconLink","Edit","BoardsList","BoardItem","BoardLink","TitleBox","IconsBox","Title","logoutUser","jsxDEV","_jsxDEV","Sidebar","_s","dispatch","boards","state","dashboards","menuMode","isModalOpen","setIsModalOpen","handleOpen","handleClose","handleBackdropClick","isOpen","onClick","children","e","stopPropagation","style","width","href","fileName","_jsxFileName","lineNumber","columnNumber","type","BoardsContainer","theme","data","map","board","isSelected","_id","location","pathname","to","from","title","onClose","_c","$RefreshReg$"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/components/Sidebar/Sidebar.jsx"],"sourcesContent":["import React, { useState } from 'react'; // Додайте імпорт useState\nimport { useSelector, useDispatch } from 'react-redux'; // Додайте імпорт useSelector та useDispatch\nimport { closeMenuMode } from '../../redux/menu/menuSlice';\n// import { selectTheme } from '../../redux/selectors';\nimport { selectIsMenuOpen } from '../../redux/menu/selectors';\nimport BoardList from './BorderList/BorderList';\n// import NeedHelpBlock from 'components/Sidebar/NeedHelpBlock/NeedHelpBlock';\nimport AddBoardModal from '../Modals/AddBoardModal/AddBoardModal';\nimport sprite from '../../assets/fonts/images/icons/icons-sprite.svg';\nimport {\n  Aside,\n  Logo,\n  IconLogo,\n  LogoText,\n  MyBoardsText,\n  AddBoardBlock,\n  CreateNewBoard,\n  BtnAdd,\n  IconPlus,\n  BtnLogOut,\n  IconLogOut,\n  TextLogOut,\n  Backdrop,\n  Delete,\n  IconLink,\n  Edit,\n  BoardsList,\n  BoardItem,\n  BoardLink,\n  TitleBox,\n  IconsBox,\n  Title,\n} from './Sidebar.styled';\nimport { logoutUser } from '../../redux/authorization/authReducer';\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(state => state.dashboards.boards);\n  //   const activeUserTheme = useSelector(selectTheme);\n  const menuMode = useSelector(selectIsMenuOpen);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsModalOpen(false);\n  };\n  const handleBackdropClick = () => {\n    dispatch(closeMenuMode()); // Закриваємо Sidebar при кліку на фон\n  };\n  //   const setIconLogo = () => {\n  //     if (activeUserTheme === 'dark' || activeUserTheme === 'light') {\n  //       return '#icon-logo';\n  //     } else if (activeUserTheme === 'violet') {\n  //       return '#icon-logo-violet';\n  //     }\n  //   };\n\n  return (\n    <Backdrop isOpen={menuMode} onClick={handleBackdropClick}>\n      <Aside isOpen={menuMode} onClick={e => e.stopPropagation()}>\n        <div style={{ width: '100%' }}>\n          <Logo>\n            <IconLogo>\n              <use href={sprite + '#icon-logo'} />\n            </IconLogo>\n            <LogoText>Task Pro</LogoText>\n          </Logo>\n\n          <MyBoardsText>My boards</MyBoardsText>\n\n          <AddBoardBlock>\n            <CreateNewBoard onClick={handleOpen}>\n              Create a new board\n            </CreateNewBoard>\n\n            <BtnAdd type=\"button\" onClick={handleOpen}>\n              <IconPlus aria-label=\"add icon\">\n                <use href={sprite + `#icon-plus`} />\n              </IconPlus>\n            </BtnAdd>\n          </AddBoardBlock>\n        </div>\n        {/* <BoardList /> */}\n\n        <BoardsContainer>\n          <BoardsList theme={theme}>\n            {data &&\n              data.map(board => {\n                const isSelected = `/home/${board._id}` === location.pathname;\n\n                return (\n                  <BoardItem key={board._id}>\n                    <BoardLink\n                      to={`/home/${board._id}`}\n                      state={{ from: location }}\n                      theme={theme}\n                    >\n                      <TitleBox>\n                        {/* <IconTitle theme={theme}>\n                          <use href={sprite + board.icon}></use>\n                        </IconTitle> */}\n                        <Title theme={theme}>{board.title}</Title>\n                      </TitleBox>\n                    </BoardLink>\n                    {isSelected && (\n                      <IconsBox theme={theme}>\n                        {/* <IconButton\n                          type=\"button\"\n                          onClick={() =>\n                            openEditModalHandler(board.title, board.icon)\n                          }\n                        > */}\n                        {/* <Edit>\n                            <use href={icon + '#icon-pencil-01'}></use>\n                          </Edit> */}\n                        {/* </IconButton> */}\n                        {/* <IconLink onClick={() => deleteBoardHanlder(board._id)}>\n                          <Delete>\n                            <use href={icon + '#icon-trash-04'}></use>\n                          </Delete>\n                        </IconLink> */}\n                      </IconsBox>\n                    )}\n                  </BoardItem>\n                );\n              })}\n          </BoardsList>\n        </BoardsContainer>\n        <div style={{ width: '100%' }}>\n          {/* <NeedHelpBlock /> */}\n\n          <BtnLogOut type=\"button\" onClick={() => dispatch(logoutUser())}>\n            <IconLogOut aria-label=\"logout icon\">\n              <use href={sprite + `#icon-login`} />\n            </IconLogOut>\n\n            <TextLogOut>Log out</TextLogOut>\n          </BtnLogOut>\n        </div>\n        {isModalOpen && <AddBoardModal onClose={handleClose} />}\n      </Aside>\n    </Backdrop>\n  );\n};\n\nexport default Sidebar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa,CAAC,CAAC;AACxD,SAASC,aAAa,QAAQ,4BAA4B;AAC1D;AACA,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C;AACA,OAAOC,aAAa,MAAM,uCAAuC;AACjE,OAAOC,MAAM,MAAM,kDAAkD;AACrE,SACEC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,QAAQ,EACRC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,MAAM,EACNC,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRC,MAAM,EACNC,QAAQ,EACRC,IAAI,EACJC,UAAU,EACVC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,KAAK,QACA,kBAAkB;AACzB,SAASC,UAAU,QAAQ,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGjC,WAAW,CAAC,CAAC;EAC9B,MAAMkC,MAAM,GAAGnC,WAAW,CAACoC,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACF,MAAM,CAAC;EAC5D;EACA,MAAMG,QAAQ,GAAGtC,WAAW,CAACG,gBAAgB,CAAC;EAC9C,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM0C,UAAU,GAAGA,CAAA,KAAM;IACvBD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBF,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EACD,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChCT,QAAQ,CAAChC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE6B,OAAA,CAACZ,QAAQ;IAACyB,MAAM,EAAEN,QAAS;IAACO,OAAO,EAAEF,mBAAoB;IAAAG,QAAA,eACvDf,OAAA,CAACxB,KAAK;MAACqC,MAAM,EAAEN,QAAS;MAACO,OAAO,EAAEE,CAAC,IAAIA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAF,QAAA,gBACzDf,OAAA;QAAKkB,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAJ,QAAA,gBAC5Bf,OAAA,CAACvB,IAAI;UAAAsC,QAAA,gBACHf,OAAA,CAACtB,QAAQ;YAAAqC,QAAA,eACPf,OAAA;cAAKoB,IAAI,EAAE7C,MAAM,GAAG;YAAa;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACXxB,OAAA,CAACrB,QAAQ;YAAAoC,QAAA,EAAC;UAAQ;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eAEPxB,OAAA,CAACpB,YAAY;UAAAmC,QAAA,EAAC;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eAEtCxB,OAAA,CAACnB,aAAa;UAAAkC,QAAA,gBACZf,OAAA,CAAClB,cAAc;YAACgC,OAAO,EAAEJ,UAAW;YAAAK,QAAA,EAAC;UAErC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAAC,eAEjBxB,OAAA,CAACjB,MAAM;YAAC0C,IAAI,EAAC,QAAQ;YAACX,OAAO,EAAEJ,UAAW;YAAAK,QAAA,eACxCf,OAAA,CAAChB,QAAQ;cAAC,cAAW,UAAU;cAAA+B,QAAA,eAC7Bf,OAAA;gBAAKoB,IAAI,EAAE7C,MAAM,GAAI;cAAY;gBAAA8C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eAGNxB,OAAA,CAAC0B,eAAe;QAAAX,QAAA,eACdf,OAAA,CAACR,UAAU;UAACmC,KAAK,EAAEA,KAAM;UAAAZ,QAAA,EACtBa,IAAI,IACHA,IAAI,CAACC,GAAG,CAACC,KAAK,IAAI;YAChB,MAAMC,UAAU,GAAI,SAAQD,KAAK,CAACE,GAAI,EAAC,KAAKC,QAAQ,CAACC,QAAQ;YAE7D,oBACElC,OAAA,CAACP,SAAS;cAAAsB,QAAA,gBACRf,OAAA,CAACN,SAAS;gBACRyC,EAAE,EAAG,SAAQL,KAAK,CAACE,GAAI,EAAE;gBACzB3B,KAAK,EAAE;kBAAE+B,IAAI,EAAEH;gBAAS,CAAE;gBAC1BN,KAAK,EAAEA,KAAM;gBAAAZ,QAAA,eAEbf,OAAA,CAACL,QAAQ;kBAAAoB,QAAA,eAIPf,OAAA,CAACH,KAAK;oBAAC8B,KAAK,EAAEA,KAAM;oBAAAZ,QAAA,EAAEe,KAAK,CAACO;kBAAK;oBAAAhB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,EACXO,UAAU,iBACT/B,OAAA,CAACJ,QAAQ;gBAAC+B,KAAK,EAAEA;cAAM;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAgBb,CACX;YAAA,GA/BaM,KAAK,CAACE,GAAG;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAgCd,CAAC;UAEhB,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAClBxB,OAAA;QAAKkB,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAJ,QAAA,eAG5Bf,OAAA,CAACf,SAAS;UAACwC,IAAI,EAAC,QAAQ;UAACX,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAE;UAAAiB,QAAA,gBAC7Df,OAAA,CAACd,UAAU;YAAC,cAAW,aAAa;YAAA6B,QAAA,eAClCf,OAAA;cAAKoB,IAAI,EAAE7C,MAAM,GAAI;YAAa;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eAEbxB,OAAA,CAACb,UAAU;YAAA4B,QAAA,EAAC;UAAO;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EACLhB,WAAW,iBAAIR,OAAA,CAAC1B,aAAa;QAACgE,OAAO,EAAE3B;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAACtB,EAAA,CA/GID,OAAO;EAAA,QACM/B,WAAW,EACbD,WAAW,EAETA,WAAW;AAAA;AAAAsE,EAAA,GAJxBtC,OAAO;AAiHb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}