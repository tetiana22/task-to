{"ast":null,"code":"import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nconst {\n  addColumn,\n  editColumn,\n  addBoard,\n  editBoard\n} = require('./cardsReducers');\nconst initialState = {\n  boards: [{\n    columns: [{\n      id: '',\n      title: '',\n      cards: []\n    }]\n  }],\n  currentColumnId: null,\n  currentCardId: null,\n  isDeadlineToday: false,\n  isLoggedIn: false,\n  error: null,\n  isLoading: false\n};\nconst boardsSlice = createSlice({\n  name: 'dashboards',\n  initialState,\n  extraReducers: builder => builder.addCase(addBoard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.isLoggedIn = true;\n    state.boards.push(action.payload);\n  }).addCase(editBoard.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.error = null;\n    const {\n      _id,\n      name,\n      icon,\n      backgroundURL\n    } = action.payload;\n    const boardIndex = state.boards.findIndex(item => item._id === _id);\n    state.boards[boardIndex] = {\n      ...state.boards[boardIndex],\n      name,\n      icon,\n      backgroundURL\n    };\n    state.currentName = name;\n    state.currentBg = backgroundURL;\n  }).addCase(addColumn.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.isLoggedIn = true;\n    state.boards.columns.push(action.payload);\n  }).addCase(editColumn.fulfilled, (state, action) => {\n    const {\n      _id,\n      text\n    } = action.payload;\n    const columnIndex = state.boards.columns.findIndex(item => item._id === _id);\n    state.boards.columns[columnIndex].text = text;\n    state.isLoading = false;\n    state.error = null;\n  }).addMatcher(isAnyOf(addColumn.pending, editColumn.pending, addBoard.pending, editBoard.pending), state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addMatcher(isAnyOf(addColumn.rejected, editColumn.rejected, addBoard.rejected, editBoard.rejected), (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n  })\n});\nexport const cardshReducer = boardsSlice.reducer;","map":{"version":3,"names":["createSlice","isAnyOf","addColumn","editColumn","addBoard","editBoard","require","initialState","boards","columns","id","title","cards","currentColumnId","currentCardId","isDeadlineToday","isLoggedIn","error","isLoading","boardsSlice","name","extraReducers","builder","addCase","fulfilled","state","action","push","payload","_id","icon","backgroundURL","boardIndex","findIndex","item","currentName","currentBg","text","columnIndex","addMatcher","pending","rejected","cardshReducer","reducer"],"sources":["/Users/tetanaglincak/Desktop/TaskPro project/Final-project-frontend/src/redux/cards/cardsSlice.jsx"],"sourcesContent":["import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nconst {\n  addColumn,\n  editColumn,\n  addBoard,\n  editBoard,\n} = require('./cardsReducers');\n\nconst initialState = {\n  boards: [\n    {\n      columns: [\n        {\n          id: '',\n          title: '',\n          cards: [],\n        },\n      ],\n    },\n  ],\n  currentColumnId: null,\n  currentCardId: null,\n  isDeadlineToday: false,\n  isLoggedIn: false,\n  error: null,\n  isLoading: false,\n};\n\nconst boardsSlice = createSlice({\n  name: 'dashboards',\n  initialState,\n  extraReducers: builder =>\n    builder\n      .addCase(addBoard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isLoggedIn = true;\n        state.boards.push(action.payload);\n      })\n      .addCase(editBoard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        const { _id, name, icon, backgroundURL } = action.payload;\n\n        const boardIndex = state.boards.findIndex(item => item._id === _id);\n\n        state.boards[boardIndex] = {\n          ...state.boards[boardIndex],\n          name,\n          icon,\n          backgroundURL,\n        };\n        state.currentName = name;\n        state.currentBg = backgroundURL;\n      })\n\n      .addCase(addColumn.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isLoggedIn = true;\n        state.boards.columns.push(action.payload);\n      })\n      .addCase(editColumn.fulfilled, (state, action) => {\n        const { _id, text } = action.payload;\n        const columnIndex = state.boards.columns.findIndex(\n          item => item._id === _id\n        );\n        state.boards.columns[columnIndex].text = text;\n        state.isLoading = false;\n        state.error = null;\n      })\n      .addMatcher(\n        isAnyOf(\n          addColumn.pending,\n          editColumn.pending,\n          addBoard.pending,\n          editBoard.pending\n        ),\n        state => {\n          state.isLoading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          addColumn.rejected,\n          editColumn.rejected,\n          addBoard.rejected,\n          editBoard.rejected\n        ),\n        (state, action) => {\n          state.isLoading = false;\n          state.error = action.payload;\n        }\n      ),\n});\nexport const cardshReducer = boardsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AACvD,MAAM;EACJC,SAAS;EACTC,UAAU;EACVC,QAAQ;EACRC;AACF,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE9B,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CACN;IACEC,OAAO,EAAE,CACP;MACEC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACT,CAAC;EAEL,CAAC,CACF;EACDC,eAAe,EAAE,IAAI;EACrBC,aAAa,EAAE,IAAI;EACnBC,eAAe,EAAE,KAAK;EACtBC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,WAAW,GAAGnB,WAAW,CAAC;EAC9BoB,IAAI,EAAE,YAAY;EAClBb,YAAY;EACZc,aAAa,EAAEC,OAAO,IACpBA,OAAO,CACJC,OAAO,CAACnB,QAAQ,CAACoB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC9CD,KAAK,CAACP,SAAS,GAAG,KAAK;IACvBO,KAAK,CAACT,UAAU,GAAG,IAAI;IACvBS,KAAK,CAACjB,MAAM,CAACmB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;EACnC,CAAC,CAAC,CACDL,OAAO,CAAClB,SAAS,CAACmB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC/CD,KAAK,CAACP,SAAS,GAAG,KAAK;IACvBO,KAAK,CAACR,KAAK,GAAG,IAAI;IAClB,MAAM;MAAEY,GAAG;MAAET,IAAI;MAAEU,IAAI;MAAEC;IAAc,CAAC,GAAGL,MAAM,CAACE,OAAO;IAEzD,MAAMI,UAAU,GAAGP,KAAK,CAACjB,MAAM,CAACyB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACL,GAAG,KAAKA,GAAG,CAAC;IAEnEJ,KAAK,CAACjB,MAAM,CAACwB,UAAU,CAAC,GAAG;MACzB,GAAGP,KAAK,CAACjB,MAAM,CAACwB,UAAU,CAAC;MAC3BZ,IAAI;MACJU,IAAI;MACJC;IACF,CAAC;IACDN,KAAK,CAACU,WAAW,GAAGf,IAAI;IACxBK,KAAK,CAACW,SAAS,GAAGL,aAAa;EACjC,CAAC,CAAC,CAEDR,OAAO,CAACrB,SAAS,CAACsB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC/CD,KAAK,CAACP,SAAS,GAAG,KAAK;IACvBO,KAAK,CAACT,UAAU,GAAG,IAAI;IACvBS,KAAK,CAACjB,MAAM,CAACC,OAAO,CAACkB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;EAC3C,CAAC,CAAC,CACDL,OAAO,CAACpB,UAAU,CAACqB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IAChD,MAAM;MAAEG,GAAG;MAAEQ;IAAK,CAAC,GAAGX,MAAM,CAACE,OAAO;IACpC,MAAMU,WAAW,GAAGb,KAAK,CAACjB,MAAM,CAACC,OAAO,CAACwB,SAAS,CAChDC,IAAI,IAAIA,IAAI,CAACL,GAAG,KAAKA,GACvB,CAAC;IACDJ,KAAK,CAACjB,MAAM,CAACC,OAAO,CAAC6B,WAAW,CAAC,CAACD,IAAI,GAAGA,IAAI;IAC7CZ,KAAK,CAACP,SAAS,GAAG,KAAK;IACvBO,KAAK,CAACR,KAAK,GAAG,IAAI;EACpB,CAAC,CAAC,CACDsB,UAAU,CACTtC,OAAO,CACLC,SAAS,CAACsC,OAAO,EACjBrC,UAAU,CAACqC,OAAO,EAClBpC,QAAQ,CAACoC,OAAO,EAChBnC,SAAS,CAACmC,OACZ,CAAC,EACDf,KAAK,IAAI;IACPA,KAAK,CAACP,SAAS,GAAG,IAAI;IACtBO,KAAK,CAACR,KAAK,GAAG,IAAI;EACpB,CACF,CAAC,CACAsB,UAAU,CACTtC,OAAO,CACLC,SAAS,CAACuC,QAAQ,EAClBtC,UAAU,CAACsC,QAAQ,EACnBrC,QAAQ,CAACqC,QAAQ,EACjBpC,SAAS,CAACoC,QACZ,CAAC,EACD,CAAChB,KAAK,EAAEC,MAAM,KAAK;IACjBD,KAAK,CAACP,SAAS,GAAG,KAAK;IACvBO,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACE,OAAO;EAC9B,CACF;AACN,CAAC,CAAC;AACF,OAAO,MAAMc,aAAa,GAAGvB,WAAW,CAACwB,OAAO"},"metadata":{},"sourceType":"module"}